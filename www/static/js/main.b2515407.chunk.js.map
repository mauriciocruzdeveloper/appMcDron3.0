{"version":3,"sources":["history.js","redux/App/App.types.js","persistencia/persistenciaFirebase.js","redux/App/App.actions.js","components/Principal.component.jsx","components/Login.component.jsx","components/Error.component.jsx","routes/Routes.js","components/App.component.jsx","redux/App/App.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["createHashHistory","AppTypes","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","loginPersistencia","emailParametro","passwordParametro","Promise","resolve","reject","console","log","auth","signInWithEmailAndPassword","then","userAuth","currentUser","emailVerified","app","dialog","alert","sendEmailVerification","catch","error","code","login","email","password","dispatch","a","type","usuario","payload","data","isLoggedIn","finally","logout","connect","admin","className","state","isFetching","emailOnChangeLogin","passwordOnChangeLogin","handleLogin","history","push","class","src","alt","width","height","id","placeholder","value","onChange","e","target","for","onClick","mensaje","exact","path","render","to","props","INITIAL_STATE","nombre","apellido","nick","urlFoto","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","ThunkMiddleware","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.b2515407.chunk.js","sourcesContent":["import { createHashHistory } from \"history\";\r\n\r\n// Hay que usar createHashHistory con Cordova, en lugar de createBrowserHistory\r\nexport default createHashHistory();","export const AppTypes = {\r\n    LOGIN: \"LOGIN\",\r\n    LOGOUT: \"LOGOUT\",\r\n    CHANGE_EMAIL_LOGIN: \"CHANGE_EMAIL_LOGIN\",\r\n    CHANGE_PASSWORD_LOGIN: \"CHANGE_PASSWORD_LOGIN\",\r\n    ISFETCHING_START: \"ISFETCHING_START\",\r\n    ISFETCHING_COMPLETE: \"ISFETCHING_COMPLETE\"\r\n}","//import firebase from  'firebase/app';\r\n//const firebase = require('firebase/app');\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCqupkvp1jXt8y8WjVjSuqi9OFMkJu_LpI\",\r\n    authDomain: \"mc-dron.firebaseapp.com\",\r\n    projectId: \"mc-dron\",\r\n    storageBucket: \"mc-dron.appspot.com\",\r\n    messagingSenderId: \"410639876260\",\r\n    appId: \"1:410639876260:web:045fb9451d7ec1d6ee2631\"\r\n  };\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const loginPersistencia = (emailParametro, passwordParametro) => {\r\n\r\n    // La contraseña se encripta del lado del servidor por seguridad\r\n    return new Promise((resolve, reject) => {\r\n\r\n        console.log(emailParametro,passwordParametro);\r\n\r\n        firebase.auth().signInWithEmailAndPassword(emailParametro,passwordParametro)\r\n        .then(() => {\r\n            console.log(\"Se logueó\");\r\n\r\n            let userAuth = firebase.auth().currentUser;\r\n            let usuario = {};\r\n            const {nombre, apellido, email, nick, urlFoto, password, admin, ciudad, domicilio,  provincia, telefono} = usuario;\r\n\r\n            if(userAuth.emailVerified) {\r\n                console.log('Email is verified');\r\n                return resolve();\r\n                // usuario = colUsuarios.doc(email);\r\n                // usuario.get()\r\n                // .then(doc => {\r\n                //     console.log('Entra al then get');\r\n                //     if(doc.exists){\r\n                //         console.log('Entra al doc.exists');\r\n                //         const {Nick, UrlFotoUsu, NombreUsu, ApellidoUsu, CiudadUsu, DomicilioUsu, ProvinciaUsu, TelefonoUsu, Admin} = doc.data();\r\n                        \r\n                //         nick = Nick;\r\n                //         urlFoto = UrlFotoUsu;\r\n                //         nombre = NombreUsu;\r\n                //         apellido = ApellidoUsu;\r\n                //         ciudad = CiudadUsu;\r\n                //         domicilio = DomicilioUsu;\r\n                //         provincia = ProvinciaUsu;\r\n                //         telefono = TelefonoUsu;\r\n                //         admin = Admin;\r\n                //         email = emailParametro;\r\n                //         password = passwordParametro;\r\n\r\n                //         console.log(JSON.stringify(usuario));\r\n\r\n                //         // dispatch(\r\n                //         //     { \r\n                //         //         type: LoginTypes.LOGIN, \r\n                //         //         payload: { \r\n                //         //             data: {\r\n                //         //                 isLoggedIn: true,\r\n                //         //                 usuario\r\n                //         //             }\r\n                //         //         }\r\n                //         //     }\r\n                //         // )\r\n\r\n                //         return resolve(usuario);\r\n                //     }\r\n                // })\r\n                // .catch(error => {\r\n                //     console.log('Entra al catch get');\r\n                //     reject(error);\r\n                // });  \r\n            }else{\r\n                console.log('Email is not verified');\r\n                app.dialog.alert(\"Falta verificar el email. Compruebe su casilla de correos\",\"Atención\");\r\n                userAuth.sendEmailVerification();\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error.code);\r\n            reject(error);\r\n        });\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n};","import { AppTypes } from \"./App.types\";\r\nimport { loginPersistencia } from \"../../persistencia/persistenciaFirebase\";\r\n\r\nexport const isFetchingStart = () => {console.log(\"llega a isfetching\"); return { type: AppTypes.ISFETCHING_START }};\r\nexport const isFetchingCoplete = () => ({ type: AppTypes.ISFETCHING_COMPLETE });\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n\r\n    dispatch( isFetchingStart());\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        if(email!=\"\" && password!=\"\"){\r\n            await loginPersistencia( email, password )\r\n            .then( usuario => {\r\n                console.log(\"llega al then del loginPersistencia\");\r\n                dispatch({ \r\n                    type: AppTypes.LOGIN, \r\n                    payload: { \r\n                        data: {\r\n                            isLoggedIn: true,\r\n                            usuario\r\n                        }\r\n                    }\r\n                });\r\n                // No hace falta devolver el usuario, pero lo hago por si sirve en otra ocación.\r\n                return resolve(usuario); \r\n            })\r\n            .catch(error  => {\r\n                console.log(\"llega al catch del loginPersistencia\");\r\n                reject(error);\r\n            })\r\n            .finally(dispatch(isFetchingCoplete()));\r\n        }else{\r\n            return reject()\r\n        };\r\n    });\r\n\r\n    \r\n};\r\n\r\n// export const errorLogin = () => ({\r\n//     type: LoginTypes.ERROR_LOGIN,\r\n//     payload: { data: { errorLogin: true } }\r\n// });\r\n\r\nexport const logout = () => ({\r\n    type: AppTypes.LOGOUT,\r\n    payload: { data: { isLoggedIn: false } }\r\n});\r\n\r\n// Los \"OnChange\" me van actualizando los valores de las variables de estado en la medida que toco algo del formulario.\r\n\r\nexport const emailOnChangeLogin = ( data ) => ({ \r\n    type: AppTypes.CHANGE_EMAIL_LOGIN,\r\n    payload: { data }\r\n});\r\n\r\nexport const passwordOnChangeLogin = ( data ) => ({ \r\n    type: AppTypes.CHANGE_PASSWORD_LOGIN,\r\n    payload: { data }\r\n});\r\n","import React from \"react\";\r\n// Módulo para conectar con redux\r\nimport { connect } from \"react-redux\";\r\n// Actions\r\nimport { logout } from \"../redux/root-actions\";\r\n// Componentes\r\n// import Calendario from \"./Calendario/Calendario.component\";\r\n// import PantallaAdministrador from \"./PantallaAdministrador\";\r\n\r\nconst Principal = ({ logout, admin }) => {\r\n    return (\r\n        <div className=\"m-0 row justify-content-center\">\r\n            {/* <h1 className=\"col-auto bg-light p-5 text-center\">App Turnos Rotativos</h1> \r\n            {\r\n                // Muestra botones para acceder a los empleados y tipos de jornada sólo si sos administrador \r\n                admin ? <PantallaAdministrador /> : <Calendario />\r\n            }\r\n            <div className=\"row justify-content-end\">\r\n                <button type=\"button\" className=\"border col-2 btn btn-dark float-right\"  onClick = {() => logout() }>Logout</button>\r\n            </div>  */}\r\n            PRINCIPAL\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default connect( null, { logout } )( Principal );\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, emailOnChangeLogin, passwordOnChangeLogin } from \"../redux/root-actions\";\r\nimport history from \"../history\";\r\n\r\nconst Login = ({ \r\n  isFetching, \r\n  login, \r\n  emailOnChangeLogin, \r\n  passwordOnChangeLogin, \r\n  email, \r\n  password \r\n}) => {\r\n\r\n  const handleLogin = async () => {\r\n    // Hice una promesa para que cuando no se puede loguear me mande a una página de error de login\r\n    await login( email, password)\r\n      .then( () => history.push(\"/\") )\r\n      .catch( () => history.push(\"/errorlogin\") );    \r\n  };\r\n\r\n  return (\r\n    isFetching ? <h3>cargando ....</h3> :\r\n    <div class=\"text-center\">\r\n      <main class=\"form-signin\">\r\n        <form class=\"text-center\">\r\n\r\n          <img class=\"mb-4\" src=\"./img/logo.png\" alt=\"\" width=\"100%\" height=\"100px\" />\r\n          <h1 class=\"h3 mb-3 fw-normal\">Please sign in</h1>\r\n      \r\n          <div class=\"form-floating\">\r\n            <input \r\n              type=\"email\" \r\n              class=\"form-control\" \r\n              id=\"floatingInput\" \r\n              placeholder=\"name@example.com\" \r\n              value={ email }\r\n              onChange={ (e) => emailOnChangeLogin( e.target.value ) }\r\n            />\r\n            <label for=\"floatingInput\">Email address</label>\r\n          </div>\r\n          <div class=\"form-floating\">\r\n            <input \r\n              type=\"password\" \r\n              class=\"form-control\" \r\n              id=\"floatingPassword\" \r\n              placeholder=\"Password\" \r\n              value={ password }\r\n              onChange={ e => passwordOnChangeLogin( e.target.value ) }\r\n            />\r\n            <label for=\"floatingPassword\">Password</label>\r\n          </div>\r\n      \r\n          <div class=\"checkbox mb-3\">\r\n            <label>\r\n              <input type=\"checkbox\" value=\"remember-me\" /> Remember me\r\n            </label>\r\n          </div>\r\n\r\n          <button \r\n            onClick={ () => handleLogin() }\r\n            class=\"w-100 btn btn-lg btn-primary bg-bluemcdron\" \r\n            type=\"submit\"\r\n          >\r\n            Sign in\r\n          </button>\r\n\r\n          <p class=\"mt-5 mb-3 text-muted\">© 2017–2021</p>\r\n          \r\n        </form>\r\n      </main>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\n    // <div className=\"page-content\">\r\n\r\n    // <div className=\"text-align-center margin-top\">\r\n    //     <img src=\"../src/img/logo.png\" width=\"90%\" max-width=\"300px\"/> \r\n    // </div>\r\n    //     <div className=\"block-title\">Logueate</div>\r\n    //     <div className=\"list no-hairlines-md\">\r\n    //     <ul>\r\n    //       <li className=\"item-content item-input\">\r\n    //         <div className=\"item-media\">\r\n    //           <i className=\"icon demo-list-icon\"></i>\r\n    //         </div>\r\n    //         <div className=\"item-inner\">\r\n    //           <div className=\"item-title item-floating-label\">E-mail</div>\r\n    //           <div className=\"item-input-wrap\">\r\n    //             <input \r\n    //               value={ email }\r\n    //               onChange={ (e) => emailOnChangeLogin( e.target.value ) }\r\n    //               id=\"logEmail\" \r\n    //               type=\"email\" \r\n    //               placeholder=\"Tu e-mail\" \r\n    //               value=\"admin@mauriciocruzdrones.com\" \r\n    //             />\r\n    //             <span className=\"input-clear-button\"></span>\r\n    //           </div>\r\n    //         </div>\r\n    //       </li>\r\n    //       <li className=\"item-content item-input\">\r\n    //         <div className=\"item-media\">\r\n    //           <i className=\"icon demo-list-icon\"></i>\r\n    //         </div>\r\n    //         <div className=\"item-inner\">\r\n    //           <div className=\"item-title item-floating-label\">Contraseña</div>\r\n    //           <div className=\"item-input-wrap\">\r\n    //             <input \r\n    //               value={ password }\r\n    //               onChange={ (e) => passwordOnChangeLogin( e.target.value ) }\r\n    //               id=\"logContra\" \r\n    //               type=\"password\" \r\n    //               placeholder=\"Contraseña\" \r\n    //               value=\"123456\" \r\n    //             />\r\n    //             <span className=\"input-clear-button\"></span>\r\n    //           </div>\r\n    //         </div>\r\n    //       </li>\r\n\r\n\r\n\r\n    //     </ul>\r\n    //     </div>\r\n    //       <div className=\"row\">                        \r\n    //         <div className=\"col-20\"></div>                \r\n    //         <div \r\n    //           onClick={ () => handleLogin() }\r\n    //           className=\"col-60 button button-raised button-fill bg-bluemcdron\" \r\n    //           widht=\"100px\">Logueate\r\n    //         </div>\r\n    //         <div className=\"col-20\"></div>\r\n    //       </div>\r\n\r\n    //     {/* <div className=\"text-align-center margin-top\">\r\n    //       <a className=\"irRecuperar\">Olvid&oacute; su contraseña?</a>\r\n    //     </div> */}\r\n\r\n    //     <div className=\"text-align-center margin-top\">\r\n    //       <img src=\"../src/img/logo1.png\" width=\"90%\"/> \r\n    //     </div>\r\n\r\n    // </div>\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  email: state.app.usuario.email,\r\n  password: state.app.usuario.password,\r\n  admin: state.app.usuario.admin,\r\n  isFetching: state.app.isFetching\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, emailOnChangeLogin, passwordOnChangeLogin })(Login);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../history\";\r\n\r\nconst NoAutorizado = ({ mensaje }) => {\r\n    return(\r\n        <div>\r\n            <div>\r\n    \t        <h3 className=\"display-4 text-center text-dark\">{ mensaje }</h3>    \t                              \r\n            </div>\t \r\n            <div class=\"d-grid gap-2 col-5 mx-auto\">\r\n                <button onClick={() => history.push(\"/\")} type=\"button\" class=\"btn btn-dark me-md-2  mt-4\">PRINCIPAL</button>\r\n            </div> \r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default connect( null, null )( NoAutorizado );","// Modules\r\nimport React from 'react';\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Componenst\r\nimport Principal from '../components/Principal.component';\r\nimport Login from '../components/Login.component';\r\nimport Error from \"../components/Error.component\";\r\n// import Turno from \"../components/Turno.components\";\r\n// import Resumen from \"../components/Resumen.component\";\r\n\r\n\r\n//Routes\r\n// import EmpleadosRoutes from \"./Empleados/Empleados.routes\";\r\n// import TiposJornadaRoutes from \"./TiposJornada/TiposJornada.routes\";\r\n\r\n// Actions\r\nimport { login, logout } from \"../redux/root-actions\";\r\n\r\nconst Routes = ({ isLoggedIn, admin }) => (\r\n    <Switch>\r\n\r\n        {/* Si está logueado, entra a la página principal, sino a la página de login. */}\r\n        <Route exact path=\"/\" render = { () => {\r\n            return !isLoggedIn ? <Redirect to=\"/login\" /> : <Principal admin = { admin }/>\r\n        }} />\r\n\r\n        {/* <Route path=\"/empleados\" render = { ( props ) => {\r\n                return <EmpleadosRoutes { ...props } isLoggedIn = { isLoggedIn } admin = { admin } />;\r\n        }} /> */}\r\n\r\n        <Route exact path=\"/noautorizado\" render = { () => <Error mensaje={\"Acceso no autorizado\"} /> } />\r\n        <Route exact path=\"/errorlogin\" render = { () => <Error mensaje={\"Login incorrecto\"} /> } />\r\n        <Route exact path=\"/ocurrioproblema\" render = { () => <Error mensaje={\"Ocurrió un problema\"} /> } />\r\n\r\n        {/* <Route exact path=\"/turnos\" render = { () => {\r\n            return !isLoggedIn ? <Redirect to=\"/login\" /> : <Turno />\r\n        }} />   */}\r\n\r\n        {/* <Route path=\"/tiposjornada\" render = { ( props ) =>{\r\n                return <TiposJornadaRoutes { ...props } isLoggedIn = { isLoggedIn } admin = { admin }/>;\r\n        }} /> */}\r\n\r\n        {/* <Route exact path=\"/resumen\" render = { () => {\r\n            return !isLoggedIn ? <Redirect to=\"/login\" /> : <Resumen />\r\n        }} />   */}\r\n\r\n        <Route path=\"/login\" render = {( props ) => <Login { ...props } /> }/>\r\n\r\n    </Switch>\r\n);\r\n\r\nexport default connect( null, { login, logout } )( Routes );","import React from \"react\";\r\nimport { Router } from \"react-router-dom\";\r\nimport history from \"../history\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Routes from \"../routes/Routes\";\r\n\r\nconst App = ( { isLoggedIn, admin }) => {\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Router history = { history } >\r\n          <Routes isLoggedIn = { isLoggedIn } admin = { admin }/>\r\n        </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ( state ) => ({\r\n  isLoggedIn: state.app.isLoggedIn,\r\n  admin: state.app.usuario.admin\r\n});\r\n\r\nexport default connect( mapStateToProps )( App );\r\n","import { AppTypes } from \"./App.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    isLoggedIn: false,\r\n    isFetching: false,\r\n    usuario:{\r\n        nombre: null,\r\n        apellido: null,\r\n        email: null,\r\n        nick: null,\r\n        urlFoto: null,\r\n        password: null,\r\n        admin: false\r\n        //token: ''\r\n    },\r\n}\r\n\r\n// Reducer para el App\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case AppTypes.ISFETCHING_START:\r\n            return { ...state, isFetching: true };\r\n\r\n        case AppTypes.ISFETCHING_COMPLETE:\r\n            return { ...state, isFetching: false };\r\n\r\n        case AppTypes.LOGIN:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                isLoggedIn: action.payload.data.isLoggedIn,\r\n                usuario: {\r\n                    ...state.usuario,\r\n                    nombre: action.payload.data.usuario?.nombre,\r\n                    apellido: action.payload.data.usuario?.apellido,\r\n                    admin: action.payload.data.usuario.admin,\r\n                    email: action.payload.data.usuario.email,\r\n                    nick: action.payload.data.usuario.nick,\r\n                    password: action.payload.data.usuario.password,\r\n                    urlFoto: action.payload.data.usuario.urlFoto\r\n                    //token: action.payload.data.usuario.token\r\n                }\r\n            }\r\n        case AppTypes.LOGOUT:\r\n            return {\r\n                ...state, \r\n                isLoggedIn: action.payload.data.isLoggedIn\r\n            }\r\n        case AppTypes.CHANGE_PASSWORD_LOGIN:\r\n            return { \r\n                ...state, \r\n                usuario: {\r\n                    ...state.usuario,\r\n                    password: action.payload.data\r\n                }\r\n            };\r\n        case AppTypes.CHANGE_EMAIL_LOGIN:\r\n            return { \r\n                ...state, \r\n                usuario: {\r\n                    ...state.usuario,\r\n                    email: action.payload.data\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport AppReducer from \"./App/App.reducer\";\r\n\r\n// Aquí se centralizan los reducers. Cuando se importan los reducers desde otros archivos, se hace desde éste.\r\nexport default combineReducers({ \r\n    app: AppReducer\r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport ThunkMiddleware from \"redux-thunk\";\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst composeEnhancers =\r\n    window.window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middlewares = [ThunkMiddleware];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n);\r\n\r\nexport default store;","import ReactDOM from \"react-dom\";\r\nimport App from \"./components/App.component.jsx\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap.min.js'\r\nimport './css/estilos.css';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}