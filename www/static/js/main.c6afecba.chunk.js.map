{"version":3,"sources":["history.js","redux/App/App.types.js","persistencia/persistenciaFirebase.js","redux/App/App.actions.js","components/Login.component.jsx","components/Error.component.jsx","components/Inicio.component.jsx","components/ListaReparaciones.component.jsx","utils/utils.js","components/Reparacion.component.jsx","components/NavMcDron.component.jsx","routes/Inicio.routes.js","routes/Routes.js","components/App.component.jsx","redux/App/App.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["createHashHistory","AppTypes","firestore","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","loginPersistencia","emailParametro","passwordParametro","Promise","resolve","reject","console","log","auth","getAuth","signInWithEmailAndPassword","then","userAuth","currentUser","emailVerified","usuarioRef","doc","collection","JSON","stringify","getDoc","exists","data","Nick","UrlFotoUsu","NombreUsu","ApellidoUsu","CiudadUsu","DomicilioUsu","ProvinciaUsu","TelefonoUsu","Admin","usuario","nombre","apellido","email","nick","urlFoto","password","admin","ciudad","domicilio","provincia","telefono","catch","error","app","dialog","alert","sendEmailVerification","code","getReparacionPersistencia","id","docRef","docSnap","guardarReparacionPersistencia","reparacion","setDoc","isFetchingStart","type","isFetchingCoplete","login","dispatch","a","payload","isLoggedIn","finally","logout","connect","state","isFetching","showError","emailOnChangeLogin","passwordOnChangeLogin","abreError","titulo","mensaje","modalError","mensajeError","tituloError","handleLogin","history","push","className","src","alt","width","placeholder","value","onChange","e","target","onClick","cierraError","hide","Modal","centered","show","onHide","Title","Alert","variant","Body","Footer","Button","match","style","height","path","coleccionReparaciones","getReparaciones","reparacionesRef","q","query","orderBy","getDocs","querySnapshot","reparaciones","forEach","useEffect","map","DroneRep","backgroundColor","estados","EstadoRep","color","accion","UsuarioRep","convertTimestampCORTO","timestamp","d","Date","parseInt","getFullYear","getMonth","slice","getDate","changeInputRep","input","getReparacion","setEstado","estado","guardarReparacion","useParams","estadosArray","Object","values","DriveRep","FeConRep","DescripcionUsuRep","FeRecRep","NumeroSerieRep","DescripcionTecRep","PresuMoRep","PresuReRep","PresuFiRep","PresuDiRep","TxtRepuestosRep","InformeRep","FeFinRep","FeEntRep","TxtEntregaRep","SeguimientoEntrega","Navbar","goBack","InicioRoutes","exact","component","Inicio","ListaReparaciones","Reparacion","to","render","props","INITIAL_STATE","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","ThunkMiddleware","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","querySelector"],"mappings":"oNAGeA,gB,sCCHFC,EACF,QADEA,EAED,SAFCA,EAGW,qBAHXA,EAIc,wBAJdA,EAKS,mBALTA,EAMY,sBANZA,EAOI,cAPJA,EAQS,mBARTA,EASO,iBATPA,EAUS,mBAVTA,EAWG,a,wBCqBVC,GAFcC,YATC,CACjBC,OAAQ,0CACRC,WAAY,0BACZC,UAAW,UACXC,cAAe,sBACfC,kBAAmB,eACnBC,MAAO,8CAKOC,eAILC,EAAoB,SAACC,EAAgBC,GAG9C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAEzBC,QAAQC,IAAIN,EAAeC,GAE3B,IAAMM,EAAOC,cAEbC,YAA2BF,EAAMP,EAAeC,GAC/CS,MAAK,WACFL,QAAQC,IAAI,gBACZ,IAAIK,EAAWJ,EAAKK,YACpB,GAAGD,EAASE,cAAe,CACvBR,QAAQC,IAAI,qBAAuBN,GACnC,IAAIc,EAAaC,YAAIC,YAAW1B,EAAW,YAAaU,GAgCxD,OA/BAK,QAAQC,IAAI,eAAiBW,KAAKC,UAAUJ,IAC5CK,YAAOL,GACNJ,MAAK,SAAAK,GAEF,GADAV,QAAQC,IAAI,qBACTS,EAAIK,OAAO,CACVf,QAAQC,IAAI,uBACZ,MAA8GS,EAAIM,OAA3GC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,WAAYC,EAAzB,EAAyBA,UAAWC,EAApC,EAAoCA,YAAaC,EAAjD,EAAiDA,UAAWC,EAA5D,EAA4DA,aAAcC,EAA1E,EAA0EA,aAAcC,EAAxF,EAAwFA,YAAaC,EAArG,EAAqGA,MAEjGC,EAAU,CACVC,OAAQR,EACRS,SAAUR,EACVS,MAAOlC,EACPmC,KAAMb,EACNc,QAASb,EACTc,SAAUpC,EACVqC,MAAOR,EACPS,OAAQb,EACRc,UAAWb,EACXc,UAAWb,EACXc,SAAUb,GAKd,OAFAxB,QAAQC,IAAIW,KAAKC,UAAUa,IAEpB5B,EAAQ4B,OAGtBY,OAAM,SAAAC,GACHvC,QAAQC,IAAI,sBACZF,EAAOwC,MAEJzC,IAEPE,QAAQC,IAAI,yBACZuC,IAAIC,OAAOC,MAAM,4DAA4D,eAC7EpC,EAASqC,2BAGhBL,OAAM,SAAAC,GACHvC,QAAQC,IAAIsC,EAAMK,MAClB7C,EAAOwC,UAoBNM,EAA4B,SAACC,GACtC,OAAO,IAAIjD,SAAQ,SAACC,EAASC,GAEzB,IAAMgD,EAASrC,YAAIzB,EAAW,eAAgB6D,GAC9ChC,YAAOiC,GACN1C,MAAK,SAAA2C,GACFlD,EAAQ,CAACgD,GAAIA,EAAI9B,KAAMgC,EAAQhC,YAElCsB,OAAM,SAAAC,GAAK,OAAIxC,EAAOwC,UAIlBU,EAAgC,SAACC,GAE1C,OAAO,IAAIrD,SAAQ,SAACC,EAASC,GAEzBoD,YACIzC,YAAIzB,EAAW,eAAgBiE,EAAWJ,IAC1CI,EAAWlC,MAEdX,MAAK,WACFL,QAAQC,IAAI,gCACZH,EAAQoD,MAOXZ,OAAM,SAAAC,GACHvC,QAAQC,IAAI,UAAYsC,GACxBxC,EAAOwC,UCtINa,G,KAAkB,WAA0C,OAAnCpD,QAAQC,IAAI,sBAA8B,CAAEoD,KAAMrE,KAC3EsE,EAAoB,iBAAO,CAAED,KAAMrE,IAEnCuE,EAAQ,SAAC1B,EAAOG,GAAR,8CAAqB,WAAOwB,GAAP,SAAAC,EAAA,+EAG/B,IAAI5D,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,eAAA0D,EAAA,yDACL,IAAP5B,GAAuB,IAAVG,EADD,uBAEXwB,EAAUJ,KAFC,SAGL1D,EAAmBmC,EAAOG,GAC/B3B,MAAM,SAAAqB,GAYH,OAXA1B,QAAQC,IAAI,uCACZuD,EAAS,CACLH,KAAMrE,EACN0E,QAAS,CACL1C,KAAM,CACF2C,YAAY,EACZjC,cAKL5B,EAAQ4B,MAElBY,OAAM,SAAAC,GACHvC,QAAQC,IAAI,wCACZF,EAAOwC,MAEVqB,QAAQJ,EAASF,MAtBP,oCAwBLf,EAAQ,CAACK,KAAM,gCAxBV,kBAyBJ7C,EAAOwC,IAzBH,kDAAZ,0DAH+B,2CAArB,uDAsCRsB,EAAS,iBAAO,CACzBR,KAAMrE,EACN0E,QAAS,CAAE1C,KAAM,CAAE2C,YAAY,M,OCoDpBG,eATS,SAACC,GAAD,MAAY,CAClClC,MAAOkC,EAAMvB,IAAId,QAAQG,MACzBG,SAAU+B,EAAMvB,IAAId,QAAQM,SAC5BC,MAAO8B,EAAMvB,IAAId,QAAQO,MACzB+B,WAAYD,EAAMvB,IAAIwB,WACtBC,UAAWF,EAAMvB,IAAIyB,aAIiB,CAAEV,QAAOW,mBD/Cf,SAAElD,GAAF,MAAa,CAC3CqC,KAAMrE,EACN0E,QAAS,CAAE1C,UC6CsDmD,sBD1ChC,SAAEnD,GAAF,MAAa,CAC9CqC,KAAMrE,EACN0E,QAAS,CAAE1C,UCwC6EoD,UDvBnE,SAACC,EAAQC,GAE9B,OADAtE,QAAQC,IAAI,qBACL,CACHoD,KAAMrE,EACN0E,QAAS,CACL1C,KAAM,CACFuD,WAAY,CACRN,WAAW,EACXO,aAAcF,EACdG,YAAaJ,QCclBP,EA7FD,SAAC,GASR,IARLE,EAQI,EARJA,WACAT,EAOI,EAPJA,MACAW,EAMI,EANJA,mBACAC,EAKI,EALJA,sBACAtC,EAII,EAJJA,MACAG,EAGI,EAHJA,SAEAoC,GACI,EAFJH,UAEI,EADJG,WAGMM,EAAW,uCAAG,sBAAAjB,EAAA,sEAGZF,EAAO1B,EAAOG,GACjB3B,MAAM,kBAAMsE,EAAQC,KAAK,QACzBtC,OAAO,SAAAC,GACN6B,EAAU,SAAU,eAAc7B,EAAMK,SAN1B,2CAAH,qDAejB,OACEoB,EAAa,+CAEb,qBAAKa,UAAU,cAAf,SACE,sBAAMA,UAAU,cAAhB,SACE,sBAAKA,UAAU,cAAf,UAEE,qBAAKA,UAAU,OAAOC,IAAI,iBAAiBC,IAAI,GAAGC,MAAM,SACxD,oBAAIH,UAAU,oBAAd,4BAEA,sBAAKA,UAAU,gBAAf,UACE,uBACExB,KAAK,QACLwB,UAAU,eACV/B,GAAG,gBACHmC,YAAY,mBACZC,MAAQrD,EACRsD,SAAW,SAACC,GAAD,OAAOlB,EAAoBkB,EAAEC,OAAOH,UAEjD,qDAEF,sBAAKL,UAAU,gBAAf,UACE,uBACExB,KAAK,WACLwB,UAAU,eACV/B,GAAG,mBACHmC,YAAY,WACZC,MAAQlD,EACRmD,SAAW,SAAAC,GAAC,OAAIjB,EAAuBiB,EAAEC,OAAOH,UAElD,gDAGF,qBAAKL,UAAU,gBAAf,SACE,kCACE,uBAAOxB,KAAK,WAAW6B,MAAM,gBAD/B,oBAKF,wBACEI,QAAU,kBAAMZ,KAChBG,UAAU,6CAFZ,qBAOA,mBAAGA,UAAU,uBAAb,2C,2BC1DKf,cAAQ,KAAM,CAACyB,YF0CH,WAEvB,OADAvF,QAAQC,IAAI,kBACL,CACHoD,KAAMrE,EACN0E,QAAS,CACL1C,KAAM,CACFuD,WAAY,CACRN,WAAW,QEjDhBH,EAnBQ,SAAC,GAA4C,IAA1C0B,EAAyC,EAAzCA,KAAMnB,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,QAASiB,EAAkB,EAAlBA,YAI7C,OAFAvF,QAAQC,IAAI,0BAA4BuF,GAGpC,eAACC,EAAA,EAAD,CAAOC,UAAQ,EAACC,KAAMH,EAAMI,OAAQL,EAApC,UACI,cAACE,EAAA,EAAMI,MAAP,UAAa,cAACC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyB1B,MACtC,cAACoB,EAAA,EAAMO,KAAP,UAAa1B,IACb,cAACmB,EAAA,EAAMQ,OAAP,UACI,cAACC,EAAA,EAAD,CAAQrB,UAAU,gBAAgBS,QAASC,EAA3C,4BCwBDzB,cAAS,KAAM,CAAED,UAAjBC,EAzBA,SAAC,GAA6B,EAA3BD,OAA2B,EAAnB5B,MAAoB,IAAbkE,EAAY,EAAZA,MAC7B,OAEI,sBAAKtB,UAAU,cAAf,UACI,qBAAKA,UAAU,OAAOC,IAAI,iBAAiBC,IAAI,GAAGC,MAAM,OAAO,YAAU,UAEzE,wBACEH,UAAU,6BACVuB,MAAO,CAACC,OAAQ,SAChBf,QAAS,kBAAMX,EAAQC,KAAR,UAAgBuB,EAAMG,KAAtB,mBAHjB,SAKE,qBAAKzB,UAAU,yBAAf,4BAGF,wBACEA,UAAU,6BACVuB,MAAO,CAACC,OAAQ,SAFlB,SAIE,qBAAKxB,UAAU,yBAAf,iC,QCiDCf,eALS,SAACC,GAAD,MAAY,CAClCwC,sBAAuBxC,EAAMvB,IAAI+D,sBACjCvC,WAAYD,EAAMvB,IAAIwB,cAGiB,CAAEwC,gBJ0BZ,yDAAM,WAAOhD,GAAP,SAAAC,EAAA,+EAC1B,IAAI5D,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,SAAA0D,EAAA,6DACfD,EAAUJ,KADK,SDTZ,IAAIvD,SAAQ,SAACC,EAASC,GACzB,IAAM0G,EAAkB9F,YAAW1B,EAAW,gBACxCyH,EAAIC,YAAMF,EAAiBG,YAAQ,iBACzCC,YAAQH,GACPrG,MAAK,SAAAyG,GACF,IAAIC,EAAe,GACnBD,EAAcE,SAAQ,SAAAtG,GAAG,OAAIqG,EAAanC,KAAK,CAAC9B,GAAIpC,EAAIoC,GAAI9B,KAAMN,EAAIM,YACtElB,EAAQiH,MAEXzE,OAAM,SAAAC,GAAK,OAAIxC,EAAOwC,SCGtBlC,MAAM,SAAA0G,GASH,OARA/G,QAAQC,IAAI,iDACZuD,EAAS,CACLH,KAAMrE,EACN0E,QAAS,CACL1C,KAAM+F,KAIPjH,EAAQiH,MAElBzE,OAAM,SAAAC,GACHvC,QAAQC,IAAI,kDACZF,EAAOwC,MAEVqB,QAAQJ,EAASF,MAlBH,2CAAZ,0DAD0B,2CAAN,wDI1BhBQ,EAxEW,SAAC,GAKpB,IAJL0C,EAII,EAJJA,gBACAD,EAGI,EAHJA,sBACAvC,EAEI,EAFJA,WAEI,EADJmC,MAmCA,OA/BAc,oBAAS,sBAAC,sBAAAxD,EAAA,sEAMF+C,IANE,2CAOP,CAACA,IAyBFxC,EAAa,+CACb,qBAAKa,UAAU,aAAf,SACG0B,EAAsBW,KAAI,SAAAhE,GAAU,OACnC,oBAEEgC,MAAOhC,EAAWJ,GAClB+B,UAAU,yCACV,eAAa,OACbS,QAAS,kBAAMX,EAAQC,KAAR,kBAAwB1B,EAAWJ,MALpD,UAOE,qBAAK+B,UAAU,uCAAf,SACE,oBAAIA,UAAU,OAAd,SAAsB3B,EAAWlC,KAAKmG,aAExC,oBACEtC,UAAU,OACVuB,MAAO,CAACgB,gBAAiBC,IAAQnE,EAAWlC,KAAKsG,WAAWC,OAF9D,UAIGrE,EAAWlC,KAAKsG,UAJnB,MAIiCD,IAAQnE,EAAWlC,KAAKsG,WAAWE,UAEpE,gCAAQtE,EAAWlC,KAAKyG,eAfnBvE,EAAWJ,YCrDb4E,EAAwB,SAACC,GAClC,IAAIC,EAAI,IAAIC,KAAyB,EAApBC,SAASH,IAM1B,OALOC,EAAEG,cAGS,KAFZ,KAAOH,EAAEI,WAAa,IAAIC,OAAO,GAEV,KADvB,IAAML,EAAEM,WAAWD,OAAO,IC8RrBnE,eALS,SAACC,GAAD,YAAY,CAChCb,WAAU,UAAEa,EAAMvB,WAAR,aAAE,EAAWU,cAIa,CAAEiF,eNjMZ,SAAC9C,GAAD,MAAa,CACvChC,KAAMrE,EACN0E,QAAS,CAAE0E,MAAO/C,EAAOvC,GAAI9B,KAAMqE,EAAOH,SM+LYmD,cNhK7B,SAACvF,GAAD,8CAAQ,WAAOU,GAAP,SAAAC,EAAA,+EAC1B,IAAI5D,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,SAAA0D,EAAA,6DACfD,EAAUJ,KADK,SAETP,EAA0BC,GAC/BzC,MAAM,SAAA6C,GAWH,OAVAlD,QAAQC,IAAI,+CACZD,QAAQC,IAAI,eAAiBW,KAAKC,UAAUqC,IAC5CM,EAAS,CACLH,KAAMrE,EACN0E,QAAS,CACLZ,GAAIA,EACJ9B,KAAMkC,EAAWlC,QAIlBlB,EAAQoD,MAElBZ,OAAM,SAAAC,GACHvC,QAAQC,IAAI,gDACZF,EAAOwC,MAEVqB,QAAQJ,EAASF,MApBH,2CAAZ,0DAD0B,2CAAR,uDMgK4CgF,UN5LhD,SAACC,GAAD,MAAa,CAClClF,KAAMrE,EACN0E,QAAS,CAAE1C,KAAMuH,KM0L+DC,kBNvInD,SAACtF,GAAD,8CAAgB,WAAOM,GAAP,SAAAC,EAAA,+EACtC,IAAI5D,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,SAAA0D,EAAA,6DACfD,EAAUJ,KADK,SAETH,EAA8BC,GACnC7C,MAAM,SAAA6C,GAEH,OADAlD,QAAQC,IAAI,kDACLH,EAAQoD,MAElBZ,OAAM,SAAAC,GACHvC,QAAQC,IAAI,gDACZF,EAAOwC,MAEVqB,QAAQJ,EAASF,MAXH,2CAAZ,0DADsC,2CAAhB,wDMuIlBQ,EAlRI,SAAC,GAAiF,IAAD,oCAA9EqE,EAA8E,EAA9EA,eAAgBE,EAA8D,EAA9DA,cAAenF,EAA+C,EAA/CA,WAAYoF,EAAmC,EAAnCA,UAAWE,EAAwB,EAAxBA,kBAEhE1F,EAAO2F,cAAP3F,GAERmE,oBAAS,sBAAC,sBAAAxD,EAAA,sEACA4E,EAAcvF,GADd,2CAEP,CAACuF,IAEJrI,QAAQC,IAAI,eAAiBW,KAAKC,UAAUqC,IAE5C,IAAIwF,EAAeC,OAAOC,OAAOvB,KAEjC,OACI,gCACI,qBAAKxC,UAAU,0BAAf,SACI,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,aAAd,wCACI,8BAEQ6D,EAAaxB,KAAI,SAAAqB,GAAM,aACnB,wBACInC,MAAO,CACHgB,gBACImB,EAAO5G,SAAP,OAAiBuB,QAAjB,IAAiBA,GAAjB,UAAiBA,EAAYlC,YAA7B,aAAiB,EAAkBsG,WACnCiB,EAAOhB,MACP,WAERjC,QAAU,kBAAIgD,EAAUC,EAAO5G,SAPnC,SASK4G,EAAO5G,mBAiBhC,qBAAKkD,UAAU,0BAAf,SACI,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,aAAd,4BACI,gCACI,uBAAOA,UAAU,aAAjB,6BACA,uBACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChChC,KAAK,OACLwB,UAAU,eACV/B,GAAG,WACHoC,MAAK,OAAEhC,QAAF,IAAEA,GAAF,UAAEA,EAAYlC,YAAd,aAAE,EAAkB6H,mBAKzC,qBAAKhE,UAAU,0BAAf,SACI,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,aAAd,uCACI,gCACI,uBAAOA,UAAU,aAAjB,8BACA,uBACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChChC,KAAK,OACLwB,UAAU,eACV/B,GAAG,WACHoC,MAAOwC,EAAqB,OAACxE,QAAD,IAACA,GAAD,UAACA,EAAYlC,YAAb,aAAC,EAAkB8H,eAGvD,gCACI,uBAAOjE,UAAU,aAAjB,qBACA,uBACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChChC,KAAK,OACLwB,UAAU,eACV/B,GAAG,aACHoC,MAAK,OAAEhC,QAAF,IAAEA,GAAF,UAAEA,EAAYlC,YAAd,aAAE,EAAkByG,gBAGjC,gCACI,uBAAO5C,UAAU,aAAjB,8BACA,uBACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChChC,KAAK,OACLwB,UAAU,eACV/B,GAAG,WACHoC,MAAK,OAAEhC,QAAF,IAAEA,GAAF,UAAEA,EAAYlC,YAAd,aAAE,EAAkBmG,cAGjC,gCACI,uBAAOtC,UAAU,aAAjB,oCACA,0BACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChCR,UAAU,eACV/B,GAAG,oBACHoC,MAAK,OAAEhC,QAAF,IAAEA,GAAF,UAAEA,EAAYlC,YAAd,aAAE,EAAkB+H,4BAMzC,qBAAKlE,UAAU,0BAAf,SACI,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,aAAd,0BACI,gCACI,uBAAOA,UAAU,aAAjB,mCACA,uBACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChChC,KAAK,OACLwB,UAAU,eACV/B,GAAG,WACHoC,MAAOwC,EAAqB,OAACxE,QAAD,IAACA,GAAD,UAACA,EAAYlC,YAAb,aAAC,EAAkBgI,oBAK/D,qBAAKnE,UAAU,0BAAf,SACI,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,aAAd,8DACI,gCACI,uBAAOA,UAAU,aAAjB,gCACA,uBACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChChC,KAAK,OACLwB,UAAU,eACV/B,GAAG,iBACHoC,MAAK,OAAEhC,QAAF,IAAEA,GAAF,UAAEA,EAAYlC,YAAd,aAAE,EAAkBiI,oBAGjC,gCACI,uBAAOpE,UAAU,aAAjB,0CACA,0BACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChCR,UAAU,eACV/B,GAAG,oBACHoC,MAAK,OAAEhC,QAAF,IAAEA,GAAF,UAAEA,EAAYlC,YAAd,aAAE,EAAkBkI,uBAGjC,gCACI,uBAAOrE,UAAU,aAAjB,wCACA,uBACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChChC,KAAK,SACLwB,UAAU,eACV/B,GAAG,aACHoC,MAAK,OAAEhC,QAAF,IAAEA,GAAF,UAAEA,EAAYlC,YAAd,aAAE,EAAkBmI,gBAGjC,gCACI,uBAAOtE,UAAU,aAAjB,qCACA,uBACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChChC,KAAK,SACLwB,UAAU,eACV/B,GAAG,aACHoC,MAAK,OAAEhC,QAAF,IAAEA,GAAF,UAAEA,EAAYlC,YAAd,aAAE,EAAkBoI,gBAGjC,gCACI,uBAAOvE,UAAU,aAAjB,iCACA,uBACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChChC,KAAK,SACLwB,UAAU,eACV/B,GAAG,aACHoC,MAAK,OAAEhC,QAAF,IAAEA,GAAF,UAAEA,EAAYlC,YAAd,aAAE,EAAkBqI,gBAGjC,gCACI,uBAAOxE,UAAU,aAAjB,8BACA,uBACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChChC,KAAK,SACLwB,UAAU,eACV/B,GAAG,aACHoC,MAAK,OAAEhC,QAAF,IAAEA,GAAF,UAAEA,EAAYlC,YAAd,aAAE,EAAkBsI,qBAKzC,qBAAKzE,UAAU,0BAAf,SACI,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,aAAd,8CACI,gCACI,uBAAOA,UAAU,aAAjB,yDACA,0BACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChCR,UAAU,eACV/B,GAAG,kBACHoC,MAAK,OAAEhC,QAAF,IAAEA,GAAF,UAAEA,EAAYlC,YAAd,aAAE,EAAkBuI,0BAKzC,qBAAK1E,UAAU,0BAAf,SACI,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,aAAd,uDACI,gCACI,uBAAOA,UAAU,aAAjB,uDACA,0BACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChCR,UAAU,eACV/B,GAAG,aACHoC,MAAK,OAAEhC,QAAF,IAAEA,GAAF,UAAEA,EAAYlC,YAAd,aAAE,EAAkBwI,gBAGjC,gCACI,uBAAO3E,UAAU,aAAjB,gCACA,uBACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChChC,KAAK,OACLwB,UAAU,eACV/B,GAAG,WACHoC,MAAOwC,EAAqB,OAACxE,QAAD,IAACA,GAAD,UAACA,EAAYlC,YAAb,aAAC,EAAkByI,oBAK/D,qBAAK5E,UAAU,0BAAf,SACI,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,aAAd,2CACI,gCACI,uBAAOA,UAAU,aAAjB,2BACA,uBACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChChC,KAAK,OACLwB,UAAU,eACV/B,GAAG,WACHoC,MAAOwC,EAAqB,OAACxE,QAAD,IAACA,GAAD,UAACA,EAAYlC,YAAb,aAAC,EAAkB0I,eAGvD,gCACI,uBAAO7E,UAAU,aAAjB,wDACA,0BACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChCR,UAAU,eACV/B,GAAG,gBACHoC,MAAK,OAAEhC,QAAF,IAAEA,GAAF,UAAEA,EAAYlC,YAAd,aAAE,EAAkB2I,mBAGjC,gCACI,uBAAO9E,UAAU,aAAjB,iCACA,uBACIM,SAAU,SAAAC,GAAC,OAAI+C,EAAe/C,EAAEC,SAChChC,KAAK,OACLwB,UAAU,eACV/B,GAAG,wBACHoC,MAAK,OAAEhC,QAAF,IAAEA,GAAF,UAAEA,EAAYlC,YAAd,aAAE,EAAkB4I,6BAOzC,wBACItE,QAAU,kBAAMkD,EAAkBtF,IAClC2B,UAAU,6CAFd,2B,0BCxPGf,cAAS,KAAM,CAAED,UAAjBC,EAbG,SAAC,GACf,OADyB,eAEzB,cAAC+F,EAAA,EAAD,CAAQhF,UAAU,gBAAlB,SACI,cAAC,IAAD,CACIG,MAAM,KACNqB,OAAO,KACPf,QAAU,kBAAMX,EAAQmF,UACxBvC,MAAM,eCmBHwC,EA/BM,SAAC,GAAkC,IAAhC5D,EAA+B,EAA/BA,MAAOxC,EAAwB,EAAxBA,WAAwB,EAAZ1B,MAKvC,OAHAjC,QAAQC,IAAI,gBACZD,QAAQC,IAAI0D,GAGR,mCACEA,EAEF,qCACI,cAAC,EAAD,IAEA,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOqG,OAAK,EAAC1D,KAAI,UAAOH,EAAMG,MAAQ2D,UAAYC,IAElD,cAAC,IAAD,CAAOF,OAAK,EAAC1D,KAAI,UAAKH,EAAMG,KAAX,iBAAgC2D,UAAWE,IAE5D,cAAC,IAAD,CAAOH,OAAK,EAAC1D,KAAI,UAAKH,EAAMG,KAAX,QAAuB2D,UAAWG,UAKtD,cAAC,IAAD,CAAUC,GAAG,cCUXvG,eAJS,SAACC,GAAD,YAAY,CAChCC,WAAU,UAAED,EAAMvB,WAAR,aAAE,EAAWwB,cAGc,CAAET,QAAOM,UAAnCC,EAvBA,SAAC,GAAuC,IAArCH,EAAoC,EAApCA,WAAY1B,EAAwB,EAAxBA,MAAO+B,EAAiB,EAAjBA,WACjC,OAAQ,mCACDA,EAYS,0CAXZ,eAAC,IAAD,WACI,cAAC,IAAD,CAAOgG,OAAK,EAAC1D,KAAK,IAAIgE,OAAQ,kBAAM,cAAC,IAAD,CAAUD,GAAG,eAEjD,cAAC,IAAD,CAAO/D,KAAK,gBAAgBgE,OAAW,kBAAM,cAAC,EAAD,CAAOhG,QAAS,4BAC7D,cAAC,IAAD,CAAOgC,KAAK,cAAcgE,OAAW,kBAAM,cAAC,EAAD,CAAOhG,QAAS,wBAC3D,cAAC,IAAD,CAAOgC,KAAK,mBAAmBgE,OAAW,kBAAM,cAAC,EAAD,CAAOhG,QAAS,8BAEhE,cAAC,IAAD,CAAOgC,KAAK,SAASgE,OAAU,SAAAC,GAAK,OAAI,cAAC,EAAD,eAAWA,OAEnD,cAAC,IAAD,CAAOjE,KAAK,UAAUgE,OAAU,SAAAC,GAAK,OAAI,cAAC,EAAD,2BAAkBA,GAAlB,IAAyB5G,WAAeA,EAAa1B,MAAUA,gBCGrG6B,eANS,SAAEC,GAAF,MAAc,CACpCJ,WAAYI,EAAMvB,IAAImB,WACtB1B,MAAO8B,EAAMvB,IAAId,QAAQO,MACzBsC,WAAYR,EAAMvB,IAAI+B,cAGTT,EAvBH,SAAC,GAAwC,IAArCH,EAAoC,EAApCA,WAAY1B,EAAwB,EAAxBA,MAAOsC,EAAiB,EAAjBA,WAGjC,OACE,gCACI,cAAC,EAAD,CACEiB,KAAQjB,EAAWN,UACnBK,QAAWC,EAAWC,aACtBH,OAAUE,EAAWE,cAEvB,cAAC,IAAD,CAAQE,QAAWA,EAAnB,SACE,cAAC,EAAD,CAAQhB,WAAcA,EAAY1B,MAASA,Y,0BCpB/CuI,GAAgB,CAClB7G,YAAY,EACZK,YAAY,EACZO,WAAY,CACRN,WAAW,EACXO,aAAc,GACdC,YAAa,IAEjB/C,QAAQ,CACJC,OAAQ,GACRC,SAAU,GACVC,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,SAAU,GACVC,OAAO,GAwBXsE,sBAAuB,ICrCZkE,gBAAgB,CAC3BjI,IDwCW,WAAoC,IAAD,cAAlCuB,EAAkC,uDAA1ByG,GAAeE,EAAW,uCAC9C,OAAQA,EAAOrH,MACX,KAAKrE,EACD,OAAO,2BACA+E,GADP,IAEIwC,sBAAuBmE,EAAOhH,QAAQ1C,OAG9C,KAAKhC,EACD,OAAO,2BACA+E,GADP,IAEIb,WAAY,CACRJ,GAAI4H,EAAOhH,QAAQZ,GACnB9B,KAAM0J,EAAOhH,QAAQ1C,QAIjC,KAAKhC,EACD,OAAO,2BACA+E,GADP,IAEIb,WAAW,2BACJa,EAAMb,YADH,IAENlC,KAAK,2BACE+C,EAAMb,WAAWlC,MADpB,IAEAsG,UAAWoD,EAAOhH,QAAQ1C,WAK1C,KAAKhC,EACD,OAAO,2BACA+E,GADP,IAEIb,WAAW,2BACJa,EAAMb,YADH,IAENlC,KAAK,2BACE+C,EAAMb,WAAWlC,MADpB,mBAEC0J,EAAOhH,QAAQ0E,MAAQsC,EAAOhH,QAAQ1C,WAMvD,KAAKhC,EACD,OAAO,2BAAK+E,GAAZ,IAAmBC,YAAY,IAEnC,KAAKhF,EACD,OAAO,2BAAK+E,GAAZ,IAAmBC,YAAY,IAEnC,KAAKhF,EACD,OAAO,2BACA+E,GADP,IAEIC,YAAY,EACZL,WAAY+G,EAAOhH,QAAQ1C,KAAK2C,WAChCjC,QAAQ,2BACDqC,EAAMrC,SADN,IAEHC,OAAM,UAAE+I,EAAOhH,QAAQ1C,KAAKU,eAAtB,aAAE,EAA6BC,OACrCC,SAAQ,UAAE8I,EAAOhH,QAAQ1C,KAAKU,eAAtB,aAAE,EAA6BE,SACvCK,MAAK,UAAEyI,EAAOhH,QAAQ1C,KAAKU,eAAtB,aAAE,EAA6BO,MACpCJ,MAAK,UAAE6I,EAAOhH,QAAQ1C,KAAKU,eAAtB,aAAE,EAA6BG,MACpCC,KAAI,UAAE4I,EAAOhH,QAAQ1C,KAAKU,eAAtB,aAAE,EAA6BI,KACnCE,SAAQ,UAAE0I,EAAOhH,QAAQ1C,KAAKU,eAAtB,aAAE,EAA6BM,SACvCD,QAAO,UAAE2I,EAAOhH,QAAQ1C,KAAKU,eAAtB,aAAE,EAA6BK,YAIlD,KAAK/C,EACD,OAAO,2BACA+E,GADP,IAEIJ,WAAY+G,EAAOhH,QAAQ1C,KAAK2C,aAExC,KAAK3E,EACD,OAAO,2BACA+E,GADP,IAEIrC,QAAQ,2BACDqC,EAAMrC,SADN,IAEHM,SAAU0I,EAAOhH,QAAQ1C,SAGrC,KAAKhC,EACD,OAAO,2BACA+E,GADP,IAEIrC,QAAQ,2BACDqC,EAAMrC,SADN,IAEHG,MAAO6I,EAAOhH,QAAQ1C,SAGlC,KAAKhC,EAED,OADAgB,QAAQC,IAAI,oBAAsByK,EAAOhH,QAAQ1C,KAAKiD,WAC/C,2BACAF,GADP,IAEIQ,WAAYmG,EAAOhH,QAAQ1C,KAAKuD,aAExC,QACI,OAAOR,MEtIb4G,GACFC,OAAOA,OAAOC,sCAAwCC,KAEpDC,GAAc,CAACC,MAONC,GALDC,aACVC,GACAR,GAAiBS,KAAe,WAAf,EAAmBL,M,qBCFxCM,IAASf,OACL,cAAC,IAAD,CAAUW,MAAOA,GAAjB,SACI,cAAC,EAAD,MAEJK,SAASC,cAAc,W","file":"static/js/main.c6afecba.chunk.js","sourcesContent":["import { createHashHistory } from \"history\";\r\n\r\n// Hay que usar createHashHistory con Cordova, en lugar de createBrowserHistory\r\nexport default createHashHistory();","export const AppTypes = {\r\n    LOGIN: \"LOGIN\",\r\n    LOGOUT: \"LOGOUT\",\r\n    CHANGE_EMAIL_LOGIN: \"CHANGE_EMAIL_LOGIN\",\r\n    CHANGE_PASSWORD_LOGIN: \"CHANGE_PASSWORD_LOGIN\",\r\n    ISFETCHING_START: \"ISFETCHING_START\",\r\n    ISFETCHING_COMPLETE: \"ISFETCHING_COMPLETE\",\r\n    MODAL_ERROR: \"MODAL_ERROR\",\r\n    GET_REPARACIONES: \"GET_REPARACIONES\",\r\n    GET_REPARACION: \"GET_REPARACION\",\r\n    CHANGE_INPUT_REP: \"CHANGE_INPUT_REP\",\r\n    SET_ESTADO: \"SET_ESTADO\"\r\n}","//import firebase from  'firebase/app';\r\n//const firebase = require('firebase/app');\r\n// import firebase from 'firebase/app';\r\n\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\nimport { \r\n    getAuth, \r\n    signInWithEmailAndPassword \r\n} from \"firebase/auth\"\r\nimport { \r\n    collection, \r\n    doc, \r\n    setDoc, \r\n    getFirestore, \r\n    getDoc,\r\n    getDocs,\r\n    query, \r\n    orderBy\r\n} from \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCqupkvp1jXt8y8WjVjSuqi9OFMkJu_LpI\",\r\n    authDomain: \"mc-dron.firebaseapp.com\",\r\n    projectId: \"mc-dron\",\r\n    storageBucket: \"mc-dron.appspot.com\",\r\n    messagingSenderId: \"410639876260\",\r\n    appId: \"1:410639876260:web:045fb9451d7ec1d6ee2631\"\r\n  };\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nconst firestore = getFirestore();\r\n\r\n\r\n\r\nexport const loginPersistencia = (emailParametro, passwordParametro) => {\r\n\r\n    // La contraseña se encripta del lado del servidor por seguridad\r\n    return new Promise((resolve, reject) => {\r\n\r\n        console.log(emailParametro,passwordParametro);\r\n\r\n        const auth = getAuth();\r\n\r\n        signInWithEmailAndPassword(auth, emailParametro,passwordParametro)\r\n        .then(() => {\r\n            console.log(\"Se logueó\");\r\n            let userAuth = auth.currentUser;\r\n            if(userAuth.emailVerified) {\r\n                console.log('Email is verified ' + emailParametro);\r\n                let usuarioRef = doc(collection(firestore, \"USUARIOS\"), emailParametro);\r\n                console.log('Pasa el ref:' + JSON.stringify(usuarioRef));\r\n                getDoc(usuarioRef)\r\n                .then(doc => {\r\n                    console.log('Entra al then get');\r\n                    if(doc.exists){\r\n                        console.log('Entra al doc.exists');\r\n                        const {Nick, UrlFotoUsu, NombreUsu, ApellidoUsu, CiudadUsu, DomicilioUsu, ProvinciaUsu, TelefonoUsu, Admin} = doc.data();\r\n\r\n                        let usuario = {\r\n                            nombre: NombreUsu, \r\n                            apellido: ApellidoUsu, \r\n                            email: emailParametro, \r\n                            nick: Nick, \r\n                            urlFoto: UrlFotoUsu, \r\n                            password: passwordParametro, \r\n                            admin: Admin, \r\n                            ciudad: CiudadUsu, \r\n                            domicilio: DomicilioUsu,  \r\n                            provincia: ProvinciaUsu, \r\n                            telefono: TelefonoUsu\r\n                        };\r\n\r\n                        console.log(JSON.stringify(usuario));\r\n\r\n                        return resolve(usuario);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log('Entra al catch get');\r\n                    reject(error);\r\n                });\r\n                return resolve();\r\n            }else{\r\n                console.log('Email is not verified');\r\n                app.dialog.alert(\"Falta verificar el email. Compruebe su casilla de correos\",\"Atención\");\r\n                userAuth.sendEmailVerification();\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error.code);\r\n            reject(error);\r\n        });\r\n    });\r\n\r\n};\r\n\r\nexport const getReparacionesPersistencia = () => {\r\n    return new Promise((resolve, reject) => {\r\n        const reparacionesRef = collection(firestore, 'REPARACIONES');\r\n        const q = query(reparacionesRef, orderBy(\"PrioridadRep\"));\r\n        getDocs(q)\r\n        .then(querySnapshot => {\r\n            let reparaciones = [];\r\n            querySnapshot.forEach(doc => reparaciones.push({id: doc.id, data: doc.data()}))\r\n            resolve(reparaciones)\r\n        })\r\n        .catch(error => reject(error))\r\n    });\r\n};\r\n\r\nexport const getReparacionPersistencia = (id) => {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        const docRef = doc(firestore, 'REPARACIONES', id);\r\n        getDoc(docRef)\r\n        .then(docSnap => {\r\n            resolve({id: id, data: docSnap.data()}) // Este objeto es una reparación.\r\n        })\r\n        .catch(error => reject(error))\r\n    });\r\n};\r\n\r\nexport const guardarReparacionPersistencia = (reparacion) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        setDoc(\r\n            doc(firestore, \"REPARACIONES\", reparacion.id), \r\n            reparacion.data\r\n        )\r\n        .then(() => {\r\n            console.log(\"actualizado reparación ok\");\r\n            resolve(reparacion);\r\n            //app.dialog.alert(\"Su reparacion se ha actualizado\",\"Atención\");\r\n            //LO DE LAS FOTOS LO VEREMOS DESPUES\r\n            //subeFotoReparacion(Date.now(),idReparacion,userAuth.email);\r\n            // cargaListaRep();\r\n            // precargaInicio();\r\n        })\r\n        .catch(error => {\r\n            console.log(\"Error: \" + error);\r\n            reject(error);\r\n        });\r\n\r\n    })\r\n};\r\n// VER DONDE AGREGARLO PARA QUE ME ACTUALICE LAS REPARACIONES\r\n// unsubscribeRep = colReparaciones.onSnapshot(function(snapshot){\r\n//     console.log(\"detecta cambio reparaciones\");\r\n//     cargaListaRep()\r\n// });","import { AppTypes } from \"./App.types\";\r\nimport { \r\n    loginPersistencia, \r\n    getReparacionesPersistencia,\r\n    getReparacionPersistencia,\r\n    guardarReparacionPersistencia\r\n} from \"../../persistencia/persistenciaFirebase\";\r\nimport { async } from \"@firebase/util\";\r\n\r\nexport const isFetchingStart = () => {console.log(\"llega a isfetching\"); return { type: AppTypes.ISFETCHING_START }};\r\nexport const isFetchingCoplete = () => ({ type: AppTypes.ISFETCHING_COMPLETE });\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        if(email!=\"\" && password!=\"\"){\r\n            dispatch( isFetchingStart());\r\n            await loginPersistencia( email, password )\r\n            .then( usuario => {\r\n                console.log(\"llega al then del loginPersistencia\");\r\n                dispatch({ \r\n                    type: AppTypes.LOGIN, \r\n                    payload: { \r\n                        data: {\r\n                            isLoggedIn: true,\r\n                            usuario\r\n                        }\r\n                    }\r\n                });\r\n                // No hace falta devolver el usuario, pero lo hago por si sirve en otra ocación.\r\n                return resolve(usuario); \r\n            })\r\n            .catch(error  => {\r\n                console.log(\"llega al catch del loginPersistencia\");\r\n                reject(error);\r\n            })\r\n            .finally(dispatch(isFetchingCoplete()));\r\n        }else{\r\n            const error = {code: \"email o password incorrectos\"};\r\n            return reject(error);\r\n        };\r\n    });\r\n};\r\n\r\n// export const errorLogin = () => ({\r\n//     type: LoginTypes.ERROR_LOGIN,\r\n//     payload: { data: { errorLogin: true } }\r\n// });\r\n\r\nexport const logout = () => ({\r\n    type: AppTypes.LOGOUT,\r\n    payload: { data: { isLoggedIn: false } }\r\n});\r\n\r\n// Los \"OnChange\" me van actualizando los valores de las variables de estado en la medida que toco algo del formulario.\r\n\r\nexport const emailOnChangeLogin = ( data ) => ({ \r\n    type: AppTypes.CHANGE_EMAIL_LOGIN,\r\n    payload: { data }\r\n});\r\n\r\nexport const passwordOnChangeLogin = ( data ) => ({ \r\n    type: AppTypes.CHANGE_PASSWORD_LOGIN,\r\n    payload: { data }\r\n});\r\n\r\nexport const cierraError = () => {\r\n    console.log('llega a cierra');\r\n    return {\r\n        type: AppTypes.MODAL_ERROR,\r\n        payload: { \r\n            data: {\r\n                modalError: {\r\n                    showError: false\r\n                }\r\n            } \r\n        }\r\n    }\r\n};\r\n\r\nexport const abreError = (titulo, mensaje) => {\r\n    console.log('llega a abreError');\r\n    return {\r\n        type: AppTypes.MODAL_ERROR,\r\n        payload: { \r\n            data: {\r\n                modalError: {\r\n                    showError: true,\r\n                    mensajeError: mensaje,\r\n                    tituloError: titulo\r\n                }\r\n            } \r\n        }\r\n    }\r\n};\r\n\r\nexport const changeInputRep = (target) => ({ \r\n    type: AppTypes.CHANGE_INPUT_REP,\r\n    payload: { input: target.id, data: target.value }\r\n});\r\n\r\nexport const setEstado = (estado) => ({ \r\n    type: AppTypes.SET_ESTADO,\r\n    payload: { data: estado }\r\n});\r\n\r\nexport const getReparaciones = () => async (dispatch) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        dispatch( isFetchingStart());\r\n        await getReparacionesPersistencia()\r\n        .then( reparaciones => {\r\n            console.log(\"llega al then del getReparacionesPersistencia\");\r\n            dispatch({ \r\n                type: AppTypes.GET_REPARACIONES, \r\n                payload: { \r\n                    data: reparaciones\r\n                }\r\n            });\r\n            // No hace falta devolver el usuario, pero lo hago por si sirve en otra ocación.\r\n            return resolve(reparaciones); \r\n        })\r\n        .catch(error  => {\r\n            console.log(\"llega al catch del getReparacionesPersistencia\");\r\n            reject(error);\r\n        })\r\n        .finally(dispatch(isFetchingCoplete()));\r\n    });\r\n};\r\n\r\nexport const getReparacion = (id) => async (dispatch) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        dispatch( isFetchingStart());\r\n        await getReparacionPersistencia(id)\r\n        .then( reparacion => {\r\n            console.log(\"llega al then del getReparacionPersistencia\");\r\n            console.log(\"reparacion: \" + JSON.stringify(reparacion))\r\n            dispatch({ \r\n                type: AppTypes.GET_REPARACION, \r\n                payload: {\r\n                    id: id,\r\n                    data: reparacion.data\r\n                }\r\n            });\r\n            // No hace falta devolver el usuario, pero lo hago por si sirve en otra ocación.\r\n            return resolve(reparacion); \r\n        })\r\n        .catch(error  => {\r\n            console.log(\"llega al catch del getReparacionPersistencia\");\r\n            reject(error);\r\n        })\r\n        .finally(dispatch(isFetchingCoplete()));\r\n    });\r\n};\r\n\r\nexport const guardarReparacion = (reparacion) => async (dispatch) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        dispatch( isFetchingStart());\r\n        await guardarReparacionPersistencia(reparacion)\r\n        .then( reparacion => {\r\n            console.log(\"llega al then del guardarReparacionPesistencia\");\r\n            return resolve(reparacion); \r\n        })\r\n        .catch(error  => {\r\n            console.log(\"llega al catch del getReparacionPersistencia\");\r\n            reject(error);\r\n        })\r\n        .finally(dispatch(isFetchingCoplete()));\r\n    });\r\n    \r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { \r\n  login, \r\n  emailOnChangeLogin, \r\n  passwordOnChangeLogin,\r\n  abreError\r\n} from \"../redux/root-actions\";\r\nimport history from \"../history\";\r\n\r\n\r\nconst Login = ({ \r\n  isFetching, \r\n  login, \r\n  emailOnChangeLogin, \r\n  passwordOnChangeLogin, \r\n  email, \r\n  password,\r\n  showError,\r\n  abreError\r\n}) => {\r\n\r\n  const handleLogin = async () => {\r\n    // Hice una promesa para que cuando no se puede loguear me mande a una página de error de login\r\n    \r\n    await login( email, password)\r\n      .then( () => history.push(\"/\") )\r\n      .catch( error => {\r\n        abreError(\"Error \", \"Código - \" + error.code );\r\n        // history.push(\"/errorlogin\") \r\n      });\r\n    //history.push(\"/\")\r\n    // console.log('showError ' + showError);\r\n    // abreError(\"Error\", \"Login Incorrecto\" );\r\n    // console.log('showError ' + showError);\r\n  };\r\n\r\n  return (\r\n    isFetching ? <h3>cargando ....</h3> :\r\n\r\n    <div className=\"text-center\">\r\n      <main className=\"form-signin\">\r\n        <div className=\"text-center\">\r\n\r\n          <img className=\"mb-4\" src=\"./img/logo.png\" alt=\"\" width=\"100%\" />\r\n          <h1 className=\"h3 mb-3 fw-normal\">Please sign in</h1>\r\n      \r\n          <div className=\"form-floating\">\r\n            <input \r\n              type=\"email\" \r\n              className=\"form-control\" \r\n              id=\"floatingInput\" \r\n              placeholder=\"name@example.com\" \r\n              value={ email }\r\n              onChange={ (e) => emailOnChangeLogin( e.target.value ) }\r\n            />\r\n            <label>Email address</label>\r\n          </div>\r\n          <div className=\"form-floating\">\r\n            <input \r\n              type=\"password\" \r\n              className=\"form-control\" \r\n              id=\"floatingPassword\" \r\n              placeholder=\"Password\" \r\n              value={ password }\r\n              onChange={ e => passwordOnChangeLogin( e.target.value ) }\r\n            />\r\n            <label>Password</label>\r\n          </div>\r\n      \r\n          <div className=\"checkbox mb-3\">\r\n            <label>\r\n              <input type=\"checkbox\" value=\"remember-me\" /> Remember me\r\n            </label>\r\n          </div>\r\n\r\n          <button \r\n            onClick={ () => handleLogin() }\r\n            className=\"w-100 btn btn-lg btn-primary bg-bluemcdron\"\r\n          >\r\n            Sign in\r\n          </button>\r\n\r\n          <p className=\"mt-5 mb-3 text-muted\">© 2017–2021</p>\r\n          \r\n        </div>\r\n      </main>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  email: state.app.usuario.email,\r\n  password: state.app.usuario.password,\r\n  admin: state.app.usuario.admin,\r\n  isFetching: state.app.isFetching,\r\n  showError: state.app.showError\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { login, emailOnChangeLogin, passwordOnChangeLogin, abreError })(Login);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../history\";\r\nimport { Modal, Button, Alert } from 'react-bootstrap';\r\nimport { cierraError } from '../redux/root-actions.js';\r\n\r\nconst ErrorComponent = ({ hide, titulo, mensaje, cierraError }) => {\r\n\r\n    console.log('Llega a ErrorComponent ' + hide);\r\n\r\n    return(\r\n        <Modal centered show={hide} onHide={cierraError}>\r\n            <Modal.Title><Alert variant=\"danger\">{titulo}</Alert></Modal.Title>\r\n            <Modal.Body>{mensaje}</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button className=\"bg-bluemcdron\" onClick={cierraError}>\r\n                    Cerrar\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, {cierraError})(ErrorComponent);","import React, { Fragment } from \"react\";\r\n// Módulo para conectar con redux\r\nimport { connect } from \"react-redux\";\r\n// Actions\r\nimport { logout } from \"../redux/root-actions\";\r\n// Componentes\r\n// import Calendario from \"./Calendario/Calendario.component\";\r\n// import PantallaAdministrador from \"./PantallaAdministrador\";\r\n// Transitions\r\nimport { Collapse, text, Button } from \"react-bootstrap\";\r\n// Servicios\r\nimport history from \"../history\";\r\n\r\n// match es una parámetro de las props\r\nconst Inicio = ({ logout, admin, match }) => {\r\n    return (\r\n\r\n        <div className=\"text-center\">\r\n            <img className=\"mb-4\" src=\"./img/logo.png\" alt=\"\" width=\"100%\" max-width=\"100px\" />   \r\n\r\n            <button \r\n              className=\"m-4 btn w-75 bg-bluemcdron\"\r\n              style={{height: \"100px\"}}\r\n              onClick={() => history.push(`${match.path}/reparaciones`)}\r\n            >      \r\n              <div className=\"text-white text-center\">REPARACIONES</div>\r\n            </button>\r\n\r\n            <button \r\n              className=\"m-4 btn w-75 bg-bluemcdron\"\r\n              style={{height: \"100px\"}}\r\n            >      \r\n              <div className=\"text-white text-center\">PRESUPUESTO</div>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default connect( null, { logout } )( Inicio );\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../history\";\r\nimport { \r\n  getReparaciones\r\n} from \"../redux/root-actions\";\r\n// JSON con los estados de las reparaciones\r\nimport { estados } from '../datos/estados.json';\r\n\r\nconst ListaReparaciones = ({ \r\n  getReparaciones, \r\n  coleccionReparaciones, \r\n  isFetching,\r\n  match\r\n}) => {\r\n\r\n  //PARA FORZAR LA CARGA DE LOS EMPLEADOS AL INICIALIZAR\r\n  useEffect(async () => {\r\n    // const response = await getReparaciones();\r\n    // Acá no hice una promesa como hice con login porque la redireccón es sólo en caso de error.\r\n    // Además así es más simple. Si el status es 401 es NO AUTORIZADO.\r\n    // if (response?.status == 401){ return history.push('/noautorizado')};\r\n    // if (response?.status == 400){ return history.push('/ocurrioproblema')};\r\n    await getReparaciones();\r\n  }, [getReparaciones]);\r\n\r\n  // const handleEliminar = async (id) => {\r\n  //   const response = await borrarEmpleado( id );\r\n  //   if (response?.status == 401){ return history.push('/noautorizado')};\r\n  //   if (response?.status == 400){ return history.push('/ocurrioproblema')};\r\n  //   getEmpleados();\r\n  // }\r\n\r\n  // const handleModificar = async (email) => {\r\n  //   const empleado = coleccionEmpleados.find(empleado => empleado.email == email);\r\n  //   const response = await cargaFormModifica( empleado );\r\n  //   if (response?.status == 401){ return history.push('/noautorizado')};\r\n  //   if (response?.status == 400){ return history.push('/ocurrioproblema')};\r\n  //   history.push(\"/empleados/carga\");\r\n  // }\r\n\r\n  // const handleAlta = () => {\r\n  //   cargaFormAlta();\r\n  //   history.push(\"/empleados/carga\")\r\n  // }\r\n\r\n \r\n\r\n  return (\r\n    isFetching ? <h3>cargando ....</h3> :\r\n    <div className=\"list-group\">\r\n      {coleccionReparaciones.map(reparacion => (\r\n        <a\r\n          key={reparacion.id}\r\n          value={reparacion.id} \r\n          className=\"list-group-item list-group-item-action\" \r\n          aria-current=\"true\"\r\n          onClick={() => history.push(`/inicio/${reparacion.id}`)}\r\n        >\r\n          <div className=\"d-flex w-100 justify-content-between\">\r\n            <h5 className=\"mb-1\">{reparacion.data.DroneRep}</h5>\r\n          </div>\r\n          <p \r\n            className=\"mb-1\" \r\n            style={{backgroundColor: estados[reparacion.data.EstadoRep].color}}\r\n          >\r\n            {reparacion.data.EstadoRep} - {estados[reparacion.data.EstadoRep].accion}\r\n          </p>\r\n          <small>{reparacion.data.UsuarioRep}</small>\r\n        </a>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  coleccionReparaciones: state.app.coleccionReparaciones,\r\n  isFetching: state.app.isFetching,\r\n});\r\n\r\nexport default connect( mapStateToProps, { getReparaciones } )( ListaReparaciones );","export const convertTimestampCORTO = (timestamp) => {\r\n    let d = new Date(parseInt(timestamp)*1), // Convert the passed timestamp to milliseconds\r\n    yyyy = d.getFullYear(),\r\n    mm = ('0' + (d.getMonth() + 1)).slice(-2),  // Months are zero based. Add leading 0.\r\n    dd = ('0' + d.getDate()).slice(-2);\r\n    let time = yyyy + '-' + mm + '-' + dd;\r\n      \r\n    return time;\r\n};","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../history\";\r\nimport { \r\n    changeInputRep,\r\n    getReparacion,\r\n    setEstado,\r\n    guardarReparacion\r\n  } from \"../redux/root-actions\";\r\n\r\nimport { convertTimestampCORTO } from \"../utils/utils\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { estados } from '../datos/estados.json';\r\n\r\nconst Reparacion = ({ changeInputRep, getReparacion, reparacion, setEstado, guardarReparacion }) => {\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(async () => {\r\n        await getReparacion(id);\r\n    }, [getReparacion]);\r\n\r\n    console.log(\"REPARACION: \" + JSON.stringify(reparacion));\r\n\r\n    let estadosArray = Object.values(estados);\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"card card-personalizado\">\r\n                <div className=\"card-body\">\r\n                <h5 className=\"card-title\">ESTADO DE LA REPARACIÓN</h5>\r\n                    <div>\r\n                        {\r\n                            estadosArray.map(estado =>\r\n                                <button \r\n                                    style={{\r\n                                        backgroundColor: \r\n                                            estado.nombre == reparacion?.data?.EstadoRep?\r\n                                            estado.color :\r\n                                            \"#CCCCCC\"\r\n                                    }}\r\n                                    onClick={ ()=>setEstado(estado.nombre) }\r\n                                >\r\n                                    {estado.nombre}\r\n                                </button>\r\n                            )\r\n\r\n                        }\r\n\r\n                        {/* <label className=\"form-label\">Estado</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"estadoRep\"\r\n                            value={reparacion?.data?.EstadoRep}\r\n                            onChange={e => changeInputRep(e.target)}\r\n                        /> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card card-personalizado\">\r\n                <div className=\"card-body\">\r\n                <h5 className=\"card-title\">ENLACE A DRIVE</h5>\r\n                    <div>\r\n                        <label className=\"form-label\">En lace a Drive</label>\r\n                        <input \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"driveRep\"\r\n                            value={reparacion?.data?.DriveRep}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card card-personalizado\">\r\n                <div className=\"card-body\">\r\n                <h5 className=\"card-title\">CONSULTA - PRIMEROS DATOS</h5>\r\n                    <div>\r\n                        <label className=\"form-label\">Fecha de Cosulta</label>\r\n                        <input \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            type=\"date\" \r\n                            className=\"form-control\" \r\n                            id=\"feConRep\"\r\n                            value={convertTimestampCORTO(reparacion?.data?.FeConRep)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Cliente</label>\r\n                        <input \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"usuarioRep\" \r\n                            value={reparacion?.data?.UsuarioRep}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Modelo del Drone</label>\r\n                        <input \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"droneRep\"\r\n                            value={reparacion?.data?.DroneRep}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Desperfectos o Roturas</label>\r\n                        <textarea \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            className=\"form-control\" \r\n                            id=\"descripcionUsuRep\"\r\n                            value={reparacion?.data?.DescripcionUsuRep}\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card card-personalizado\">\r\n                <div className=\"card-body\">\r\n                <h5 className=\"card-title\">RECEPCIÓN</h5>\r\n                    <div>\r\n                        <label className=\"form-label\">Fecha de Recepción</label>\r\n                        <input \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            type=\"date\" \r\n                            className=\"form-control\" \r\n                            id=\"feRecRep\"\r\n                            value={convertTimestampCORTO(reparacion?.data?.FeRecRep)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card card-personalizado\">\r\n                <div className=\"card-body\">\r\n                <h5 className=\"card-title\">REVISIÓN - DIAGNÓSTICO Y PRESUPUESTO DATOS</h5>\r\n                    <div>\r\n                        <label className=\"form-label\">Número de Serie</label>\r\n                        <input \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"numeroSerieRep\"\r\n                            value={reparacion?.data?.NumeroSerieRep}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Observaciones del Técnico</label>\r\n                        <textarea \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            className=\"form-control\" \r\n                            id=\"descripcionTecRep\"\r\n                            value={reparacion?.data?.DescripcionTecRep}\r\n                        ></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Presupuesto Mano de Obra $</label>\r\n                        <input \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            type=\"number\" \r\n                            className=\"form-control\" \r\n                            id=\"presuMoRep\" \r\n                            value={reparacion?.data?.PresuMoRep}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Presupuesto Repuestos $</label>\r\n                        <input \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            type=\"number\" \r\n                            className=\"form-control\" \r\n                            id=\"presuReRep\"\r\n                            value={reparacion?.data?.PresuReRep}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Presupuesto Final $</label>\r\n                        <input \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            type=\"number\" \r\n                            className=\"form-control\" \r\n                            id=\"presuFiRep\"\r\n                            value={reparacion?.data?.PresuFiRep}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Diagnóstico $</label>\r\n                        <input \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            type=\"number\" \r\n                            className=\"form-control\" \r\n                            id=\"presuDiRep\"\r\n                            value={reparacion?.data?.PresuDiRep}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card card-personalizado\">\r\n                <div className=\"card-body\">\r\n                <h5 className=\"card-title\">REPUESTOS - CUALES Y SEGUIMIENTO</h5>\r\n                    <div>\r\n                        <label className=\"form-label\">Qué repuesto, seguimiento, transportista</label>\r\n                        <textarea \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            className=\"form-control\" \r\n                            id=\"txtRepuestosRep\"\r\n                            value={reparacion?.data?.TxtRepuestosRep}\r\n                        ></textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card card-personalizado\">\r\n                <div className=\"card-body\">\r\n                <h5 className=\"card-title\">REPARACIÓN - DATOS DE LA REPARACIÓN</h5>\r\n                    <div>\r\n                        <label className=\"form-label\">Informe de Reparación o Diagnóstico</label>\r\n                        <textarea \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            className=\"form-control\" \r\n                            id=\"informeRep\"\r\n                            value={reparacion?.data?.InformeRep}\r\n                        ></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Fecha Finalizacion</label>\r\n                        <input \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            type=\"date\" \r\n                            className=\"form-control\" \r\n                            id=\"feFinRep\"\r\n                            value={convertTimestampCORTO(reparacion?.data?.FeFinRep)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card card-personalizado\">\r\n                <div className=\"card-body\">\r\n                <h5 className=\"card-title\">ENTREGA - DATOS DE LA ENTREGA</h5>\r\n                    <div>\r\n                        <label className=\"form-label\">Fecha Entrega</label>\r\n                        <input \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            type=\"date\" \r\n                            className=\"form-control\" \r\n                            id=\"feEntRep\"\r\n                            value={convertTimestampCORTO(reparacion?.data?.FeEntRep)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Cliente, Comisionista, Correo, Seguimiento</label>\r\n                        <textarea \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            className=\"form-control\" \r\n                            id=\"txtEntregaRep\"\r\n                            value={reparacion?.data?.TxtEntregaRep}\r\n                        ></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Nro. de Seguimiento</label>\r\n                        <input \r\n                            onChange={e => changeInputRep(e.target)} \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"seguimientoEntregaRep\"\r\n                            value={reparacion?.data?.SeguimientoEntrega}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n           \r\n            <button \r\n                onClick={ () => guardarReparacion(reparacion) }\r\n                className=\"w-100 btn btn-lg btn-primary bg-bluemcdron\"\r\n            >\r\n                Guardar\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    reparacion: state.app?.reparacion\r\n  });\r\n\r\n\r\nexport default connect(mapStateToProps, { changeInputRep, getReparacion, setEstado, guardarReparacion })(Reparacion);","import React from \"react\";\r\n// Módulo para conectar con redux\r\nimport { connect } from \"react-redux\";\r\n// Actions\r\nimport { logout } from \"../redux/root-actions\";\r\n// Componentes\r\n// import Calendario from \"./Calendario/Calendario.component\";\r\n// import PantallaAdministrador from \"./PantallaAdministrador\";\r\n\r\nimport {Navbar} from 'react-bootstrap';\r\nimport {ArrowLeftShort} from 'react-bootstrap-icons';\r\n\r\nimport history from \"../history\";\r\n\r\nconst NavMcDron = ({  }) => {\r\n    return (\r\n    <Navbar className=\"bg-bluemcdron\">\r\n        <ArrowLeftShort \r\n            width=\"50\" \r\n            height=\"50\"\r\n            onClick={ () => history.goBack() }\r\n            color=\"white\"\r\n        />\r\n    </Navbar>\r\n    )\r\n};\r\n\r\nexport default connect( null, { logout } )( NavMcDron );","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Inicio from \"../components/Inicio.component\";\r\nimport ListaReparaciones from \"../components/ListaReparaciones.component\";\r\nimport Reparacion from \"../components/Reparacion.component\";\r\n\r\nimport NavMcDron from \"../components/NavMcDron.component\";\r\n\r\n\r\nconst InicioRoutes = ({ match, isLoggedIn, admin }) => {\r\n\r\n    console.log(\"inicio rutes\")\r\n    console.log(isLoggedIn);\r\n\r\n    return (\r\n        <>\r\n        { isLoggedIn ?\r\n        // true ? \r\n        <>\r\n            <NavMcDron />\r\n\r\n            <Switch>\r\n\r\n                <Route exact path = {`${match.path}`} component= {Inicio} />\r\n\r\n                <Route exact path={`${match.path}/reparaciones`} component={ListaReparaciones} />\r\n\r\n                <Route exact path={`${match.path}/:id`} component={Reparacion} />\r\n\r\n            </Switch> \r\n        </>\r\n        : \r\n             <Redirect to=\"/login\" />\r\n            \r\n        }\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default InicioRoutes;","// Modules\r\nimport React from 'react';\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Componenst\r\nimport Login from '../components/Login.component';\r\nimport Error from \"../components/Error.component\";\r\n\r\n// import Turno from \"../components/Turno.components\";\r\n// import Resumen from \"../components/Resumen.component\";\r\n\r\n//Routes\r\nimport InicioRoutes from \"./Inicio.routes\";\r\n// import TiposJornadaRoutes from \"./TiposJornada/TiposJornada.routes\";\r\n\r\n// Actions\r\nimport { login, logout } from \"../redux/root-actions\";\r\n\r\nconst Routes = ({ isLoggedIn, admin, isFetching }) => {\r\n    return (<>\r\n        { !isFetching ?\r\n        <Switch>\r\n            <Route exact path=\"/\" render={() => <Redirect to=\"/inicio\" />}/>\r\n\r\n            <Route path=\"/noautorizado\" render = { () => <Error mensaje={\"Acceso no autorizado\"} /> } />\r\n            <Route path=\"/errorlogin\" render = { () => <Error mensaje={\"Login incorrecto\"} /> } />\r\n            <Route path=\"/ocurrioproblema\" render = { () => <Error mensaje={\"Ocurrió un problema\"} /> } />\r\n\r\n            <Route path=\"/login\" render = {props => <Login {...props} /> }/>\r\n\r\n            <Route path=\"/inicio\" render = {props => <InicioRoutes {...props} isLoggedIn = { isLoggedIn } admin = { admin } /> }/>\r\n\r\n        </Switch> : <h1>Cargando</h1>\r\n        }\r\n    </>)\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isFetching: state.app?.isFetching\r\n});\r\n\r\nexport default connect( mapStateToProps, { login, logout } )( Routes );","import React from \"react\";\r\nimport {Router} from \"react-router-dom\";\r\nimport history from \"../history\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Routes from \"../routes/Routes\";\r\nimport ErrorComponent from \"./Error.component\";\r\n\r\n// import '../../node_modules/bootstrap-icons/icons';\r\n\r\n\r\nconst App = ( { isLoggedIn, admin, modalError }) => {\r\n\r\n\r\n  return (\r\n    <div>\r\n        <ErrorComponent \r\n          hide = {modalError.showError} \r\n          mensaje = {modalError.mensajeError} \r\n          titulo = {modalError.tituloError}\r\n        />\r\n        <Router history = {history} >\r\n          <Routes isLoggedIn = {isLoggedIn} admin = {admin}/>\r\n        </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ( state ) => ({\r\n  isLoggedIn: state.app.isLoggedIn,\r\n  admin: state.app.usuario.admin,\r\n  modalError: state.app.modalError,\r\n});\r\n\r\nexport default connect( mapStateToProps )( App );\r\n","import { AppTypes } from \"./App.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    isLoggedIn: false,\r\n    isFetching: false,\r\n    modalError: {\r\n        showError: false,\r\n        mensajeError: '',\r\n        tituloError: ''\r\n    },\r\n    usuario:{\r\n        nombre: '',\r\n        apellido: '',\r\n        email: '',\r\n        nick: '',\r\n        urlFoto: '',\r\n        password: '',\r\n        admin: false\r\n        //token: ''\r\n    },\r\n    // reparacion:{\r\n    //     drone: '',\r\n    //     nroSerieDrone: '',\r\n    //     descripcionTec: '',\r\n    //     descripcionUsu: '',\r\n    //     presupuestoMO: '',\r\n    //     presupuestoRepuestos: '',\r\n    //     presupuestoFinal: '',\r\n    //     presupuestoDiagnostico: '',\r\n    //     estado: '',\r\n    //     fechaConsulta: '',\r\n    //     fechaRecepcion: '',\r\n    //     fechaEntrega: '',\r\n    //     fechaFinalizacion: '',\r\n    //     prioridad: '',\r\n    //     repuestos: '',\r\n    //     entrega: '',\r\n    //     seguimientoEntrega: '',\r\n    //     drive: '',\r\n    //     informe: ''\r\n    // },\r\n    coleccionReparaciones: []\r\n}\r\n\r\n// Reducer para el App\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case AppTypes.GET_REPARACIONES:\r\n            return { \r\n                ...state, \r\n                coleccionReparaciones: action.payload.data\r\n            };\r\n\r\n        case AppTypes.GET_REPARACION:\r\n            return { \r\n                ...state, \r\n                reparacion: {\r\n                    id: action.payload.id,\r\n                    data: action.payload.data\r\n                }\r\n            };\r\n\r\n        case AppTypes.SET_ESTADO:\r\n            return { \r\n                ...state, \r\n                reparacion: {\r\n                    ...state.reparacion,\r\n                    data: {\r\n                        ...state.reparacion.data,\r\n                        EstadoRep: action.payload.data\r\n                    }\r\n                }\r\n            };\r\n\r\n        case AppTypes.CHANGE_INPUT_REP:\r\n            return { \r\n                ...state, \r\n                reparacion: {\r\n                    ...state.reparacion,\r\n                    data: {\r\n                        ...state.reparacion.data,\r\n                        [action.payload.input]: action.payload.data\r\n                    }\r\n                    \r\n                }\r\n             };\r\n\r\n        case AppTypes.ISFETCHING_START:\r\n            return { ...state, isFetching: true };\r\n\r\n        case AppTypes.ISFETCHING_COMPLETE:\r\n            return { ...state, isFetching: false };\r\n\r\n        case AppTypes.LOGIN:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                isLoggedIn: action.payload.data.isLoggedIn,\r\n                usuario: {\r\n                    ...state.usuario,\r\n                    nombre: action.payload.data.usuario?.nombre,\r\n                    apellido: action.payload.data.usuario?.apellido,\r\n                    admin: action.payload.data.usuario?.admin,\r\n                    email: action.payload.data.usuario?.email,\r\n                    nick: action.payload.data.usuario?.nick,\r\n                    password: action.payload.data.usuario?.password,\r\n                    urlFoto: action.payload.data.usuario?.urlFoto\r\n                    //token: action.payload.data.usuario.token\r\n                }\r\n            }\r\n        case AppTypes.LOGOUT:\r\n            return {\r\n                ...state, \r\n                isLoggedIn: action.payload.data.isLoggedIn\r\n            }\r\n        case AppTypes.CHANGE_PASSWORD_LOGIN:\r\n            return { \r\n                ...state, \r\n                usuario: {\r\n                    ...state.usuario,\r\n                    password: action.payload.data\r\n                }\r\n            };\r\n        case AppTypes.CHANGE_EMAIL_LOGIN:\r\n            return { \r\n                ...state, \r\n                usuario: {\r\n                    ...state.usuario,\r\n                    email: action.payload.data\r\n                }\r\n            };\r\n        case AppTypes.MODAL_ERROR:\r\n            console.log(\"llega al reducer \" + action.payload.data.showError);\r\n            return { \r\n                ...state,\r\n                modalError: action.payload.data.modalError\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport AppReducer from \"./App/App.reducer\";\r\n\r\n// Aquí se centralizan los reducers. Cuando se importan los reducers desde otros archivos, se hace desde éste.\r\nexport default combineReducers({ \r\n    app: AppReducer\r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport ThunkMiddleware from \"redux-thunk\";\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst composeEnhancers =\r\n    window.window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middlewares = [ThunkMiddleware];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n);\r\n\r\nexport default store;","import ReactDOM from \"react-dom\";\r\nimport App from \"./components/App.component.jsx\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap.min.js'\r\nimport './css/estilos.css';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}