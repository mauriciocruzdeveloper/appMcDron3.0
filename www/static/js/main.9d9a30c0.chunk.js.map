{"version":3,"sources":["history.js","redux/App/App.types.js","redux/App/App.actions.js","components/Principal.component.jsx","components/Login.component.jsx","components/Error.component.jsx","routes/Routes.js","components/App.component.jsx","redux/App/App.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["createBrowserHistory","AppTypes","login","email","password","dispatch","a","logout","type","payload","data","isLoggedIn","emailOnChangeLogin","passwordOnChangeLogin","connect","admin","className","value","onChange","e","target","id","placeholder","state","app","usuario","isFetching","class","src","alt","width","height","for","mensaje","onClick","history","push","exact","path","render","to","props","INITIAL_STATE","nombre","token","combineReducers","action","empleado","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","ThunkMiddleware","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.9d9a30c0.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();","export const AppTypes = {\r\n    LOGIN: \"LOGIN\",\r\n    LOGOUT: \"LOGOUT\",\r\n    CHANGE_EMAIL_LOGIN: \"CHANGE_EMAIL_LOGIN\",\r\n    CHANGE_PASSWORD_LOGIN: \"CHANGE_PASSWORD_LOGIN\",\r\n    ISFETCHING_START: \"ISFETCHING_START\",\r\n    ISFETCHING_COMPLETE: \"ISFETCHING_COMPLETE\"\r\n}","import { AppTypes } from \"./App.types\";\r\n// Esta función está en Empleados en lugar de Login\r\n// import { getLoginOkApi } from \"../Empleados/Empleados.utils\";\r\n\r\nexport const isFetchingStart = () => {console.log(\"llega a isfetching\"); return { type: AppTypes.ISFETCHING_START }};\r\nexport const isFetchingCoplete = () => ({ type: AppTypes.ISFETCHING_COMPLETE });\r\n\r\nexport const login = ( email, password ) => async (dispatch) => {\r\n\r\n    // dispatch( isFetchingStart());\r\n\r\n    // return new Promise((resolve, reject) => {\r\n    //     getLoginOkApi( email, password )\r\n    //         .then( empleado => {\r\n    //             dispatch({ \r\n    //                 type: LoginTypes.LOGIN, \r\n    //                 payload: { \r\n    //                     data: {\r\n    //                         isLoggedIn: true,\r\n    //                         empleado\r\n    //                     }\r\n    //                 }\r\n    //             });\r\n    //             resolve( empleado );\r\n    //         })\r\n    //         .catch(error  => reject(error))\r\n    //         .finally(dispatch(isFetchingCoplete()));\r\n    // });\r\n};\r\n\r\n// export const errorLogin = () => ({\r\n//     type: LoginTypes.ERROR_LOGIN,\r\n//     payload: { data: { errorLogin: true } }\r\n// });\r\n\r\nexport const logout = () => ({\r\n    type: AppTypes.LOGOUT,\r\n    payload: { data: { isLoggedIn: false } }\r\n});\r\n\r\n// Los \"OnChange\" me van actualizando los valores de las variables de estado en la medida que toco algo del formulario.\r\n\r\nexport const emailOnChangeLogin = ( data ) => ({ \r\n    type: AppTypes.CHANGE_EMAIL_LOGIN,\r\n    payload: { data }\r\n});\r\n\r\nexport const passwordOnChangeLogin = ( data ) => ({ \r\n    type: AppTypes.CHANGE_PASSWORD_LOGIN,\r\n    payload: { data }\r\n});\r\n","import React from \"react\";\r\n// Módulo para conectar con redux\r\nimport { connect } from \"react-redux\";\r\n// Actions\r\nimport { logout } from \"../redux/root-actions\";\r\n// Componentes\r\n// import Calendario from \"./Calendario/Calendario.component\";\r\n// import PantallaAdministrador from \"./PantallaAdministrador\";\r\n\r\nconst Principal = ({ logout, admin }) => {\r\n    return (\r\n        <div className=\"m-0 row justify-content-center\">\r\n            {/* <h1 className=\"col-auto bg-light p-5 text-center\">App Turnos Rotativos</h1> \r\n            {\r\n                // Muestra botones para acceder a los empleados y tipos de jornada sólo si sos administrador \r\n                admin ? <PantallaAdministrador /> : <Calendario />\r\n            }\r\n            <div className=\"row justify-content-end\">\r\n                <button type=\"button\" className=\"border col-2 btn btn-dark float-right\"  onClick = {() => logout() }>Logout</button>\r\n            </div>  */}\r\n            PRINCIPAL\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default connect( null, { logout } )( Principal );\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, emailOnChangeLogin, passwordOnChangeLogin } from \"../redux/root-actions\";\r\nimport history from \"../history\";\r\n\r\nconst Login = ({ \r\n  isFetching, \r\n  login, \r\n  emailOnChangeLogin, \r\n  passwordOnChangeLogin, \r\n  email, \r\n  password \r\n}) => {\r\n\r\n  const handleLogin = async () => {\r\n    // Hice una promesa para que cuando no se puede loguear me mande a una página de error de login\r\n    await login( email, password)\r\n      .then( () => history.push(\"/\") )\r\n      .catch( () => history.push(\"/errorlogin\") );    \r\n  };\r\n\r\n  return (\r\n\r\n\r\n\r\n\r\n    isFetching ? <h3>cargando ....</h3> :\r\n    <body class=\"text-center\">\r\n      <main class=\"form-signin\">\r\n        <form>\r\n\r\n          <img class=\"mb-4\" src=\"/docs/5.1/assets/brand/bootstrap-logo.svg\" alt=\"\" width=\"72\" height=\"57\" />\r\n          <h1 class=\"h3 mb-3 fw-normal\">Please sign in</h1>\r\n      \r\n          <div class=\"form-floating\">\r\n            <input \r\n              type=\"email\" \r\n              class=\"form-control\" \r\n              id=\"floatingInput\" \r\n              placeholder=\"name@example.com\" \r\n              value={ email }\r\n              onChange={ (e) => emailOnChangeLogin( e.target.value ) }\r\n            />\r\n            <label for=\"floatingInput\">Email address</label>\r\n          </div>\r\n          <div class=\"form-floating\">\r\n            <input \r\n              type=\"password\" \r\n              class=\"form-control\" \r\n              id=\"floatingPassword\" \r\n              placeholder=\"Password\" \r\n              value={ password }\r\n              onChange={ e => passwordOnChangeLogin( e.target.value ) }\r\n            />\r\n            <label for=\"floatingPassword\">Password</label>\r\n          </div>\r\n      \r\n          <div class=\"checkbox mb-3\">\r\n            <label>\r\n              <input type=\"checkbox\" value=\"remember-me\" /> Remember me\r\n            </label>\r\n          </div>\r\n\r\n          <button class=\"w-100 btn btn-lg btn-primary\" type=\"submit\">Sign in</button>\r\n\r\n          <p class=\"mt-5 mb-3 text-muted\">© 2017–2021</p>\r\n          \r\n        </form>\r\n      </main>\r\n    </body>\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\n    <div className=\"page-content\">\r\n\r\n    <div className=\"text-align-center margin-top\">\r\n        <img src=\"../src/img/logo.png\" width=\"90%\" max-width=\"300px\"/> \r\n    </div>\r\n        <div className=\"block-title\">Logueate</div>\r\n        <div className=\"list no-hairlines-md\">\r\n        <ul>\r\n          <li className=\"item-content item-input\">\r\n            <div className=\"item-media\">\r\n              <i className=\"icon demo-list-icon\"></i>\r\n            </div>\r\n            <div className=\"item-inner\">\r\n              <div className=\"item-title item-floating-label\">E-mail</div>\r\n              <div className=\"item-input-wrap\">\r\n                <input \r\n                  value={ email }\r\n                  onChange={ (e) => emailOnChangeLogin( e.target.value ) }\r\n                  id=\"logEmail\" \r\n                  type=\"email\" \r\n                  placeholder=\"Tu e-mail\" \r\n                  value=\"admin@mauriciocruzdrones.com\" \r\n                />\r\n                <span className=\"input-clear-button\"></span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n          <li className=\"item-content item-input\">\r\n            <div className=\"item-media\">\r\n              <i className=\"icon demo-list-icon\"></i>\r\n            </div>\r\n            <div className=\"item-inner\">\r\n              <div className=\"item-title item-floating-label\">Contraseña</div>\r\n              <div className=\"item-input-wrap\">\r\n                <input \r\n                  value={ password }\r\n                  onChange={ (e) => passwordOnChangeLogin( e.target.value ) }\r\n                  id=\"logContra\" \r\n                  type=\"password\" \r\n                  placeholder=\"Contraseña\" \r\n                  value=\"123456\" \r\n                />\r\n                <span className=\"input-clear-button\"></span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n\r\n\r\n\r\n        </ul>\r\n        </div>\r\n          <div className=\"row\">                        \r\n            <div className=\"col-20\"></div>                \r\n            <div \r\n              onClick={ () => handleLogin() }\r\n              className=\"col-60 button button-raised button-fill bg-bluemcdron\" \r\n              widht=\"100px\">Logueate\r\n            </div>\r\n            <div className=\"col-20\"></div>\r\n          </div>\r\n\r\n        {/* <div className=\"text-align-center margin-top\">\r\n          <a className=\"irRecuperar\">Olvid&oacute; su contraseña?</a>\r\n        </div> */}\r\n\r\n        <div className=\"text-align-center margin-top\">\r\n          <img src=\"../src/img/logo1.png\" width=\"90%\"/> \r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  email: state.app.usuario.email,\r\n  password: state.app.usuario.password,\r\n  admin: state.app.usuario.admin,\r\n  isFetching: state.app.isFetching\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, emailOnChangeLogin, passwordOnChangeLogin })(Login);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../history\";\r\n\r\nconst NoAutorizado = ({ mensaje }) => {\r\n    return(\r\n        <div>\r\n            <div>\r\n    \t        <h3 className=\"display-4 text-center text-dark\">{ mensaje }</h3>    \t                              \r\n            </div>\t \r\n            <div class=\"d-grid gap-2 col-5 mx-auto\">\r\n                <button onClick={() => history.push(\"/\")} type=\"button\" class=\"btn btn-dark me-md-2  mt-4\">PRINCIPAL</button>\r\n            </div> \r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default connect( null, null )( NoAutorizado );","// Modules\r\nimport React from 'react';\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Componenst\r\nimport Principal from '../components/Principal.component';\r\nimport Login from '../components/Login.component';\r\nimport Error from \"../components/Error.component\";\r\n// import Turno from \"../components/Turno.components\";\r\n// import Resumen from \"../components/Resumen.component\";\r\n\r\n\r\n//Routes\r\n// import EmpleadosRoutes from \"./Empleados/Empleados.routes\";\r\n// import TiposJornadaRoutes from \"./TiposJornada/TiposJornada.routes\";\r\n\r\n// Actions\r\nimport { login, logout } from \"../redux/root-actions\";\r\n\r\nconst Routes = ({ isLoggedIn, admin }) => (\r\n    <Switch>\r\n\r\n        {/* Si está logueado, entra a la página principal, sino a la página de login. */}\r\n        <Route exact path=\"/\" render = { () => {\r\n            return !isLoggedIn ? <Redirect to=\"/login\" /> : <Principal admin = { admin }/>\r\n        }} />\r\n\r\n        {/* <Route path=\"/empleados\" render = { ( props ) => {\r\n                return <EmpleadosRoutes { ...props } isLoggedIn = { isLoggedIn } admin = { admin } />;\r\n        }} /> */}\r\n\r\n        <Route exact path=\"/noautorizado\" render = { () => <Error mensaje={\"Acceso no autorizado\"} /> } />\r\n        <Route exact path=\"/errorlogin\" render = { () => <Error mensaje={\"Login incorrecto\"} /> } />\r\n        <Route exact path=\"/ocurrioproblema\" render = { () => <Error mensaje={\"Ocurrió un problema\"} /> } />\r\n\r\n        {/* <Route exact path=\"/turnos\" render = { () => {\r\n            return !isLoggedIn ? <Redirect to=\"/login\" /> : <Turno />\r\n        }} />   */}\r\n\r\n        {/* <Route path=\"/tiposjornada\" render = { ( props ) =>{\r\n                return <TiposJornadaRoutes { ...props } isLoggedIn = { isLoggedIn } admin = { admin }/>;\r\n        }} /> */}\r\n\r\n        {/* <Route exact path=\"/resumen\" render = { () => {\r\n            return !isLoggedIn ? <Redirect to=\"/login\" /> : <Resumen />\r\n        }} />   */}\r\n\r\n        <Route path=\"/login\" render = {( props ) => <Login { ...props } /> }/>\r\n\r\n    </Switch>\r\n);\r\n\r\nexport default connect( null, { login, logout } )( Routes );","import React from \"react\";\r\nimport { Router } from \"react-router-dom\";\r\nimport history from \"../history\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Routes from \"../routes/Routes\";\r\n\r\nconst App = ( { isLoggedIn, admin }) => {\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Router history = { history } >\r\n          <Routes isLoggedIn = { isLoggedIn } admin = { admin }/>\r\n        </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ( state ) => ({\r\n  isLoggedIn: state.app.isLoggedIn,\r\n  admin: state.app.usuario.admin\r\n});\r\n\r\nexport default connect( mapStateToProps )( App );\r\n","import { AppTypes } from \"./App.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    isLoggedIn: false,\r\n    isFetching: false,\r\n    usuario:{\r\n        nombre: '',\r\n        email: '',\r\n        password: '',\r\n        admin: false,\r\n        token: ''\r\n    },\r\n}\r\n\r\n// Reducer para el App\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case AppTypes.ISFETCHING_START:\r\n            return { ...state, isFetching: true };\r\n\r\n        case AppTypes.ISFETCHING_COMPLETE:\r\n            return { ...state, isFetching: false };\r\n\r\n        case AppTypes.LOGIN:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                isLoggedIn: action.payload.data.isLoggedIn,\r\n                usuario: {\r\n                    ...state.usuario,\r\n                    nombre: action.payload.data.empleado.nombre,\r\n                    admin: action.payload.data.empleado.admin,\r\n                    email: action.payload.data.empleado.email,\r\n                    password: action.payload.data.empleado.password,\r\n                    token: action.payload.data.empleado.token\r\n                }\r\n            }\r\n        case AppTypes.LOGOUT:\r\n            return {\r\n                ...state, \r\n                isLoggedIn: action.payload.data.isLoggedIn\r\n            }\r\n        case AppTypes.CHANGE_PASSWORD_LOGIN:\r\n            return { \r\n                ...state, \r\n                usuario: {\r\n                    ...state.usuario,\r\n                    password: action.payload.data\r\n                }\r\n            };\r\n        case AppTypes.CHANGE_EMAIL_LOGIN:\r\n            return { \r\n                ...state, \r\n                usuario: {\r\n                    ...state.usuario,\r\n                    email: action.payload.data\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport AppReducer from \"./App/App.reducer\";\r\n\r\n// Aquí se centralizan los reducers. Cuando se importan los reducers desde otros archivos, se hace desde éste.\r\nexport default combineReducers({ \r\n    app: AppReducer\r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport ThunkMiddleware from \"redux-thunk\";\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst composeEnhancers =\r\n    window.window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middlewares = [ThunkMiddleware];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n);\r\n\r\nexport default store;","import ReactDOM from \"react-dom\";\r\nimport App from \"./components/App.component.jsx\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap.min.js'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}