{"version":3,"sources":["history.js","redux/App/App.types.js","persistencia/persistenciaFirebase.js","redux/App/App.actions.js","components/Login.component.jsx","components/Error.component.jsx","components/Inicio.component.jsx","components/ListaReparaciones.component.jsx","components/Reparacion.component.jsx","components/NavMcDron.component.jsx","routes/Inicio.routes.js","routes/Routes.js","components/App.component.jsx","redux/App/App.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["createBrowserHistory","AppTypes","firestore","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","loginPersistencia","emailParametro","passwordParametro","Promise","resolve","reject","console","log","auth","getAuth","signInWithEmailAndPassword","then","userAuth","currentUser","emailVerified","usuarioRef","doc","collection","JSON","stringify","getDoc","exists","data","Nick","UrlFotoUsu","NombreUsu","ApellidoUsu","CiudadUsu","DomicilioUsu","ProvinciaUsu","TelefonoUsu","Admin","usuario","nombre","apellido","email","nick","urlFoto","password","admin","ciudad","domicilio","provincia","telefono","catch","error","app","dialog","alert","sendEmailVerification","code","isFetchingStart","type","isFetchingCoplete","login","dispatch","a","payload","isLoggedIn","finally","logout","connect","state","isFetching","showError","emailOnChangeLogin","passwordOnChangeLogin","abreError","titulo","mensaje","modalError","mensajeError","tituloError","handleLogin","history","push","className","src","alt","width","id","placeholder","value","onChange","e","target","onClick","cierraError","hide","Modal","centered","show","onHide","Title","Alert","variant","Body","Footer","Button","match","Collapse","in","open","class","style","height","path","coleccionReparaciones","getReparaciones","reparacionesRef","q","query","orderBy","getDocs","querySnapshot","reparaciones","forEach","useEffect","map","reparacion","href","DroneRep","EstadoRep","UsuarioRep","changeInputRep","input","useParams","for","Navbar","goBack","color","InicioRoutes","exact","component","Inicio","ListaReparaciones","Reparacion","to","render","props","INITIAL_STATE","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","ThunkMiddleware","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.3cf79a5c.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\n\r\n// Hay que usar createHashHistory con Cordova, en lugar de createBrowserHistory\r\nexport default createBrowserHistory();","export const AppTypes = {\r\n    LOGIN: \"LOGIN\",\r\n    LOGOUT: \"LOGOUT\",\r\n    CHANGE_EMAIL_LOGIN: \"CHANGE_EMAIL_LOGIN\",\r\n    CHANGE_PASSWORD_LOGIN: \"CHANGE_PASSWORD_LOGIN\",\r\n    ISFETCHING_START: \"ISFETCHING_START\",\r\n    ISFETCHING_COMPLETE: \"ISFETCHING_COMPLETE\",\r\n    MODAL_ERROR: \"MODAL_ERROR\",\r\n    GET_REPARACIONES: \"GET_REPARACIONES\",\r\n    CHANGE_INPUT_REP: \"CHANGE_INPUT_REP\"\r\n}","//import firebase from  'firebase/app';\r\n//const firebase = require('firebase/app');\r\n// import firebase from 'firebase/app';\r\n\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\nimport { \r\n    getAuth, \r\n    signInWithEmailAndPassword \r\n} from \"firebase/auth\"\r\nimport { \r\n    collection, \r\n    doc, \r\n    setDoc, \r\n    getFirestore, \r\n    getDoc,\r\n    getDocs,\r\n    query, \r\n    orderBy\r\n} from \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCqupkvp1jXt8y8WjVjSuqi9OFMkJu_LpI\",\r\n    authDomain: \"mc-dron.firebaseapp.com\",\r\n    projectId: \"mc-dron\",\r\n    storageBucket: \"mc-dron.appspot.com\",\r\n    messagingSenderId: \"410639876260\",\r\n    appId: \"1:410639876260:web:045fb9451d7ec1d6ee2631\"\r\n  };\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nconst firestore = getFirestore();\r\n\r\n\r\n\r\nexport const loginPersistencia = (emailParametro, passwordParametro) => {\r\n\r\n    // La contraseña se encripta del lado del servidor por seguridad\r\n    return new Promise((resolve, reject) => {\r\n\r\n        console.log(emailParametro,passwordParametro);\r\n\r\n        const auth = getAuth();\r\n\r\n        signInWithEmailAndPassword(auth, emailParametro,passwordParametro)\r\n        .then(() => {\r\n            console.log(\"Se logueó\");\r\n            let userAuth = auth.currentUser;\r\n            if(userAuth.emailVerified) {\r\n                console.log('Email is verified ' + emailParametro);\r\n                let usuarioRef = doc(collection(firestore, \"USUARIOS\"), emailParametro);\r\n                console.log('Pasa el ref:' + JSON.stringify(usuarioRef));\r\n                getDoc(usuarioRef)\r\n                .then(doc => {\r\n                    console.log('Entra al then get');\r\n                    if(doc.exists){\r\n                        console.log('Entra al doc.exists');\r\n                        const {Nick, UrlFotoUsu, NombreUsu, ApellidoUsu, CiudadUsu, DomicilioUsu, ProvinciaUsu, TelefonoUsu, Admin} = doc.data();\r\n\r\n                        let usuario = {\r\n                            nombre: NombreUsu, \r\n                            apellido: ApellidoUsu, \r\n                            email: emailParametro, \r\n                            nick: Nick, \r\n                            urlFoto: UrlFotoUsu, \r\n                            password: passwordParametro, \r\n                            admin: Admin, \r\n                            ciudad: CiudadUsu, \r\n                            domicilio: DomicilioUsu,  \r\n                            provincia: ProvinciaUsu, \r\n                            telefono: TelefonoUsu\r\n                        };\r\n\r\n                        console.log(JSON.stringify(usuario));\r\n\r\n                        return resolve(usuario);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log('Entra al catch get');\r\n                    reject(error);\r\n                });\r\n                return resolve();\r\n            }else{\r\n                console.log('Email is not verified');\r\n                app.dialog.alert(\"Falta verificar el email. Compruebe su casilla de correos\",\"Atención\");\r\n                userAuth.sendEmailVerification();\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error.code);\r\n            reject(error);\r\n        });\r\n    });\r\n\r\n};\r\n\r\nexport const getReparacionesPersistencia = () => {\r\n    return new Promise((resolve, reject) => {\r\n        const reparacionesRef = collection(firestore, 'REPARACIONES');\r\n        const q = query(reparacionesRef, orderBy(\"PrioridadRep\"));\r\n        getDocs(q)\r\n        .then(querySnapshot => {\r\n            let reparaciones = [];\r\n            querySnapshot.forEach(doc => reparaciones.push({id: doc.id, data:doc.data()}))\r\n            resolve(reparaciones)\r\n        })\r\n        .catch(error => reject(error))\r\n    });\r\n};\r\n\r\n\r\n// VER DONDE AGREGARLO PARA QUE ME ACTUALICE LAS REPARACIONES\r\n// unsubscribeRep = colReparaciones.onSnapshot(function(snapshot){\r\n//     console.log(\"detecta cambio reparaciones\");\r\n//     cargaListaRep()\r\n// });","import { AppTypes } from \"./App.types\";\r\nimport { \r\n    loginPersistencia, \r\n    getReparacionesPersistencia \r\n} from \"../../persistencia/persistenciaFirebase\";\r\n\r\nexport const isFetchingStart = () => {console.log(\"llega a isfetching\"); return { type: AppTypes.ISFETCHING_START }};\r\nexport const isFetchingCoplete = () => ({ type: AppTypes.ISFETCHING_COMPLETE });\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        if(email!=\"\" && password!=\"\"){\r\n            dispatch( isFetchingStart());\r\n            await loginPersistencia( email, password )\r\n            .then( usuario => {\r\n                console.log(\"llega al then del loginPersistencia\");\r\n                dispatch({ \r\n                    type: AppTypes.LOGIN, \r\n                    payload: { \r\n                        data: {\r\n                            isLoggedIn: true,\r\n                            usuario\r\n                        }\r\n                    }\r\n                });\r\n                // No hace falta devolver el usuario, pero lo hago por si sirve en otra ocación.\r\n                return resolve(usuario); \r\n            })\r\n            .catch(error  => {\r\n                console.log(\"llega al catch del loginPersistencia\");\r\n                reject(error);\r\n            })\r\n            .finally(dispatch(isFetchingCoplete()));\r\n        }else{\r\n            const error = {code: \"email o password incorrectos\"};\r\n            return reject(error);\r\n        };\r\n    });\r\n};\r\n\r\n// export const errorLogin = () => ({\r\n//     type: LoginTypes.ERROR_LOGIN,\r\n//     payload: { data: { errorLogin: true } }\r\n// });\r\n\r\nexport const logout = () => ({\r\n    type: AppTypes.LOGOUT,\r\n    payload: { data: { isLoggedIn: false } }\r\n});\r\n\r\n// Los \"OnChange\" me van actualizando los valores de las variables de estado en la medida que toco algo del formulario.\r\n\r\nexport const emailOnChangeLogin = ( data ) => ({ \r\n    type: AppTypes.CHANGE_EMAIL_LOGIN,\r\n    payload: { data }\r\n});\r\n\r\nexport const passwordOnChangeLogin = ( data ) => ({ \r\n    type: AppTypes.CHANGE_PASSWORD_LOGIN,\r\n    payload: { data }\r\n});\r\n\r\nexport const cierraError = () => {\r\n    console.log('llega a cierra');\r\n    return {\r\n        type: AppTypes.MODAL_ERROR,\r\n        payload: { \r\n            data: {\r\n                modalError: {\r\n                    showError: false\r\n                }\r\n            } \r\n        }\r\n    }\r\n};\r\n\r\nexport const abreError = (titulo, mensaje) => {\r\n    console.log('llega a abreError');\r\n    return {\r\n        type: AppTypes.MODAL_ERROR,\r\n        payload: { \r\n            data: {\r\n                modalError: {\r\n                    showError: true,\r\n                    mensajeError: mensaje,\r\n                    tituloError: titulo\r\n                }\r\n            } \r\n        }\r\n    }\r\n};\r\n\r\nexport const changeInputRep = (target) => ({ \r\n    type: AppTypes.CHANGE_INPUT_REP,\r\n    payload: { input: target.id, data: target.value }\r\n});\r\n\r\n\r\n\r\nexport const getReparaciones = () => async (dispatch) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        dispatch( isFetchingStart());\r\n        await getReparacionesPersistencia()\r\n        .then( reparaciones => {\r\n            console.log(\"llega al then del getReparacionesPersistencia\");\r\n            dispatch({ \r\n                type: AppTypes.GET_REPARACIONES, \r\n                payload: { \r\n                    data: reparaciones\r\n                }\r\n            });\r\n            // No hace falta devolver el usuario, pero lo hago por si sirve en otra ocación.\r\n            return resolve(reparaciones); \r\n        })\r\n        .catch(error  => {\r\n            console.log(\"llega al catch del getReparacionesPersistencia\");\r\n            reject(error);\r\n        })\r\n        .finally(dispatch(isFetchingCoplete()));\r\n    });\r\n};\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { \r\n  login, \r\n  emailOnChangeLogin, \r\n  passwordOnChangeLogin,\r\n  abreError\r\n} from \"../redux/root-actions\";\r\nimport history from \"../history\";\r\n\r\n\r\nconst Login = ({ \r\n  isFetching, \r\n  login, \r\n  emailOnChangeLogin, \r\n  passwordOnChangeLogin, \r\n  email, \r\n  password,\r\n  showError,\r\n  abreError\r\n}) => {\r\n\r\n  const handleLogin = async () => {\r\n    // Hice una promesa para que cuando no se puede loguear me mande a una página de error de login\r\n    \r\n    await login( email, password)\r\n      .then( () => history.push(\"/\") )\r\n      .catch( error => {\r\n        abreError(\"Error \", \"Código - \" + error.code );\r\n        // history.push(\"/errorlogin\") \r\n      });\r\n    //history.push(\"/\")\r\n    // console.log('showError ' + showError);\r\n    // abreError(\"Error\", \"Login Incorrecto\" );\r\n    // console.log('showError ' + showError);\r\n  };\r\n\r\n  return (\r\n    isFetching ? <h3>cargando ....</h3> :\r\n\r\n    <div className=\"text-center\">\r\n      <main className=\"form-signin\">\r\n        <div className=\"text-center\">\r\n\r\n          <img className=\"mb-4\" src=\"./img/logo.png\" alt=\"\" width=\"100%\" />\r\n          <h1 className=\"h3 mb-3 fw-normal\">Please sign in</h1>\r\n      \r\n          <div className=\"form-floating\">\r\n            <input \r\n              type=\"email\" \r\n              className=\"form-control\" \r\n              id=\"floatingInput\" \r\n              placeholder=\"name@example.com\" \r\n              value={ email }\r\n              onChange={ (e) => emailOnChangeLogin( e.target.value ) }\r\n            />\r\n            <label>Email address</label>\r\n          </div>\r\n          <div className=\"form-floating\">\r\n            <input \r\n              type=\"password\" \r\n              className=\"form-control\" \r\n              id=\"floatingPassword\" \r\n              placeholder=\"Password\" \r\n              value={ password }\r\n              onChange={ e => passwordOnChangeLogin( e.target.value ) }\r\n            />\r\n            <label>Password</label>\r\n          </div>\r\n      \r\n          <div className=\"checkbox mb-3\">\r\n            <label>\r\n              <input type=\"checkbox\" value=\"remember-me\" /> Remember me\r\n            </label>\r\n          </div>\r\n\r\n          <button \r\n            onClick={ () => handleLogin() }\r\n            className=\"w-100 btn btn-lg btn-primary bg-bluemcdron\"\r\n          >\r\n            Sign in\r\n          </button>\r\n\r\n          <p className=\"mt-5 mb-3 text-muted\">© 2017–2021</p>\r\n          \r\n        </div>\r\n      </main>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  email: state.app.usuario.email,\r\n  password: state.app.usuario.password,\r\n  admin: state.app.usuario.admin,\r\n  isFetching: state.app.isFetching,\r\n  showError: state.app.showError\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { login, emailOnChangeLogin, passwordOnChangeLogin, abreError })(Login);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../history\";\r\nimport { Modal, Button, Alert } from 'react-bootstrap';\r\nimport { cierraError } from '../redux/root-actions.js';\r\n\r\nconst ErrorComponent = ({ hide, titulo, mensaje, cierraError }) => {\r\n\r\n    console.log('Llega a ErrorComponent ' + hide);\r\n\r\n    return(\r\n        <Modal centered show={hide} onHide={cierraError}>\r\n            <Modal.Title><Alert variant=\"danger\">{titulo}</Alert></Modal.Title>\r\n            <Modal.Body>{mensaje}</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button className=\"bg-bluemcdron\" onClick={cierraError}>\r\n                    Cerrar\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, {cierraError})(ErrorComponent);","import React from \"react\";\r\n// Módulo para conectar con redux\r\nimport {connect} from \"react-redux\";\r\n// Actions\r\nimport {logout} from \"../redux/root-actions\";\r\n// Componentes\r\n// import Calendario from \"./Calendario/Calendario.component\";\r\n// import PantallaAdministrador from \"./PantallaAdministrador\";\r\n// Transitions\r\nimport { Collapse } from \"react-bootstrap\";\r\n// Servicios\r\nimport history from \"../history\";\r\n\r\n// match es una parámetro de las props\r\nconst Inicio = ({ logout, admin, match }) => {\r\n    return (\r\n      <Collapse in={open}>\r\n        {/* Ver cómo se hace una transición */}\r\n        <div className=\"text-center\">\r\n            <img class=\"mb-4\" src=\"./img/logo.png\" alt=\"\" width=\"100%\" max-width=\"100px\" />   \r\n\r\n            <button \r\n              className=\"m-4 btn w-75 bg-bluemcdron\"\r\n              style={{height: \"100px\"}}\r\n              onClick={() => history.push(`${match.path}/reparaciones`)}\r\n            >      \r\n              <text class=\"text-white text-center\">REPARACIONES</text>\r\n            </button>\r\n\r\n            <button \r\n              className=\"m-4 btn w-75 bg-bluemcdron\"\r\n              style={{height: \"100px\"}}\r\n            >      \r\n              <text class=\"text-white text-center\">PRESUPUESTO</text>\r\n            </button>\r\n\r\n        </div>\r\n      </Collapse>\r\n    )\r\n};\r\n\r\nexport default connect( null, { logout } )( Inicio );\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../history\";\r\nimport { \r\n  getReparaciones\r\n} from \"../redux/root-actions\";\r\n\r\nconst ListaReparaciones = ({ \r\n  getReparaciones, \r\n  coleccionReparaciones, \r\n  isFetching,\r\n  match\r\n}) => {\r\n\r\n  //PARA FORZAR LA CARGA DE LOS EMPLEADOS AL INICIALIZAR\r\n  useEffect(async () => {\r\n    // const response = await getReparaciones();\r\n    // Acá no hice una promesa como hice con login porque la redireccón es sólo en caso de error.\r\n    // Además así es más simple. Si el status es 401 es NO AUTORIZADO.\r\n    // if (response?.status == 401){ return history.push('/noautorizado')};\r\n    // if (response?.status == 400){ return history.push('/ocurrioproblema')};\r\n    await getReparaciones();\r\n  }, [getReparaciones]);\r\n\r\n  // const handleEliminar = async (id) => {\r\n  //   const response = await borrarEmpleado( id );\r\n  //   if (response?.status == 401){ return history.push('/noautorizado')};\r\n  //   if (response?.status == 400){ return history.push('/ocurrioproblema')};\r\n  //   getEmpleados();\r\n  // }\r\n\r\n  // const handleModificar = async (email) => {\r\n  //   const empleado = coleccionEmpleados.find(empleado => empleado.email == email);\r\n  //   const response = await cargaFormModifica( empleado );\r\n  //   if (response?.status == 401){ return history.push('/noautorizado')};\r\n  //   if (response?.status == 400){ return history.push('/ocurrioproblema')};\r\n  //   history.push(\"/empleados/carga\");\r\n  // }\r\n\r\n  // const handleAlta = () => {\r\n  //   cargaFormAlta();\r\n  //   history.push(\"/empleados/carga\")\r\n  // }\r\n\r\n  return (\r\n    isFetching ? <h3>cargando ....</h3> :\r\n    <div class=\"list-group\">\r\n      {coleccionReparaciones.map(reparacion => (\r\n        <a \r\n          value={reparacion.id} \r\n          href=\"#\" \r\n          class=\"list-group-item list-group-item-action\" \r\n          aria-current=\"true\"\r\n          onClick={() => history.push(`/inicio/reparacion`)}\r\n        >\r\n          <div class=\"d-flex w-100 justify-content-between\">\r\n            <h5 class=\"mb-1\">{reparacion.data.DroneRep}</h5>\r\n            <small>3 days ago</small>\r\n          </div>\r\n          <p class=\"mb-1\">{reparacion.data.EstadoRep}</p>\r\n          <small>{reparacion.data.UsuarioRep}</small>\r\n        </a>\r\n          \r\n                      /* class=\"bg-${estados[reparacion.EstadoRep].color}\" */\r\n          \r\n                      /* <span>    -    ${estados[reparacion.EstadoRep].accion}</span> */\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  coleccionReparaciones: state.app.coleccionReparaciones,\r\n  isFetching: state.app.isFetching,\r\n});\r\n\r\nexport default connect( mapStateToProps, { getReparaciones } )( ListaReparaciones );","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../history\";\r\nimport { \r\n    changeInputRep\r\n  } from \"../redux/root-actions\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Reparacion = (changeInputRep) => {\r\n\r\n    const { id } = useParams();\r\n\r\n    return(\r\n        <form>\r\n            <div class=\"card\" style=\"width: 18rem;\">\r\n                <div class=\"card-body\">\r\n                <h5 class=\"card-title\">ESTADO DE LA REPARACIÓN</h5>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"estadoRep\" class=\"form-label\">Estado</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            class=\"form-control\" \r\n                            id=\"estadoRep\" \r\n                            onChange={e => changeInputRep(e.target)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card\" style=\"width: 18rem;\">\r\n                <div class=\"card-body\">\r\n                <h5 class=\"card-title\">ENLACE A DRIVE</h5>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"driveRep\" class=\"form-label\">En lace a Drive</label>\r\n                        <input onChange={e => changeInputRep(e.target)} type=\"text\" class=\"form-control\" id=\"driveRep\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card\" style=\"width: 18rem;\">\r\n                <div class=\"card-body\">\r\n                <h5 class=\"card-title\">CONSULTA - PRIMEROS DATOS</h5>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"feConRep\" class=\"form-label\">Fecha de Cosulta</label>\r\n                        <input onChange={e => changeInputRep(e.target)} type=\"date\" class=\"form-control\" id=\"feConRep\" />\r\n                    </div>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"usuarioRep\" class=\"form-label\">Cliente</label>\r\n                        <input onChange={e => changeInputRep(e.target)} type=\"text\" class=\"form-control\" id=\"usuarioRep\" />\r\n                    </div>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"droneRep\" class=\"form-label\">Modelo del Drone</label>\r\n                        <input onChange={e => changeInputRep(e.target)} type=\"text\" class=\"form-control\" id=\"droneRep\" />\r\n                    </div>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"descripcionUsuRep\" class=\"form-label\">Desperfectos o Roturas</label>\r\n                        <textarea onChange={e => changeInputRep(e.target)} class=\"form-control\" id=\"descripcionUsuRep\"></textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card\" style=\"width: 18rem;\">\r\n                <div class=\"card-body\">\r\n                <h5 class=\"card-title\">CONSULTA - PRIMEROS DATOS</h5>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"feRecRep\" class=\"form-label\">Fecha de Recepción</label>\r\n                        <input onChange={e => changeInputRep(e.target)} type=\"date\" class=\"form-control\" id=\"feRecRep\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card\" style=\"width: 18rem;\">\r\n                <div class=\"card-body\">\r\n                <h5 class=\"card-title\">REVISIÓN - DIAGNÓSTICO Y PRESUPUESTO DATOS</h5>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"numeroSerieRep\" class=\"form-label\">Número de Serie</label>\r\n                        <input onChange={e => changeInputRep(e.target)} type=\"text\" class=\"form-control\" id=\"numeroSerieRep\" />\r\n                    </div>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"descripcionTecRep\" class=\"form-label\">Observaciones del Técnico</label>\r\n                        <textarea onChange={e => changeInputRep(e.target)} class=\"form-control\" id=\"descripcionTecRep\"></textarea>\r\n                    </div>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"presuMoRep\" class=\"form-label\">Presupuesto Mano de Obra $</label>\r\n                        <input onChange={e => changeInputRep(e.target)} type=\"number\" class=\"form-control\" id=\"presuMoRep\" />\r\n                    </div>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"presuReRep\" class=\"form-label\">Presupuesto Repuestos $</label>\r\n                        <input onChange={e => changeInputRep(e.target)} type=\"number\" class=\"form-control\" id=\"presuReRep\" />\r\n                    </div>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"presuFiRep\" class=\"form-label\">Presupuesto Final $</label>\r\n                        <input onChange={e => changeInputRep(e.target)} type=\"number\" class=\"form-control\" id=\"presuFiRep\" />\r\n                    </div>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"presuDiRep\" class=\"form-label\">Diagnóstico $</label>\r\n                        <input onChange={e => changeInputRep(e.target)} type=\"number\" class=\"form-control\" id=\"presuDiRep\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card\" style=\"width: 18rem;\">\r\n                <div class=\"card-body\">\r\n                <h5 class=\"card-title\">REPUESTOS - CUALES Y SEGUIMIENTO</h5>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"txtRepuestosRep\" class=\"form-label\">Qué repuesto, seguimiento, transportista</label>\r\n                        <textarea onChange={e => changeInputRep(e.target)} class=\"form-control\" id=\"txtRepuestosRep\"></textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card\" style=\"width: 18rem;\">\r\n                <div class=\"card-body\">\r\n                <h5 class=\"card-title\">REPARACIÓN - DATOS DE LA REPARACIÓN</h5>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"informeRep\" class=\"form-label\">Informe de Reparación o Diagnóstico</label>\r\n                        <textarea onChange={e => changeInputRep(e.target)} class=\"form-control\" id=\"informeRep\"></textarea>\r\n                    </div>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"feFinRep\" class=\"form-label\">Fecha Finalizacion</label>\r\n                        <input onChange={e => changeInputRep(e.target)} type=\"date\" class=\"form-control\" id=\"feFinRep\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card\" style=\"width: 18rem;\">\r\n                <div class=\"card-body\">\r\n                <h5 class=\"card-title\">ENTREGA - DATOS DE LA ENTREGA</h5>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"feEntRep\" class=\"form-label\">Fecha Entrega</label>\r\n                        <input onChange={e => changeInputRep(e.target)} type=\"date\" class=\"form-control\" id=\"feEntRep\" />\r\n                    </div>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"txtEntregaRep\" class=\"form-label\">Cliente, Comisionista, Correo, Seguimiento</label>\r\n                        <textarea onChange={e => changeInputRep(e.target)} class=\"form-control\" id=\"txtEntregaRep\"></textarea>\r\n                    </div>\r\n                    <div class=\"form-floating mb-3\">\r\n                        <label for=\"seguimientoEntregaRep\" class=\"form-label\">Nro. de Seguimiento</label>\r\n                        <input onChange={e => changeInputRep(e.target)} type=\"text\" class=\"form-control\" id=\"seguimientoEntregaRep\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n           \r\n            <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, {changeInputRep})(Reparacion);","import React from \"react\";\r\n// Módulo para conectar con redux\r\nimport { connect } from \"react-redux\";\r\n// Actions\r\nimport { logout } from \"../redux/root-actions\";\r\n// Componentes\r\n// import Calendario from \"./Calendario/Calendario.component\";\r\n// import PantallaAdministrador from \"./PantallaAdministrador\";\r\n\r\nimport {Navbar} from 'react-bootstrap';\r\nimport {ArrowLeftShort} from 'react-bootstrap-icons';\r\n\r\nimport history from \"../history\";\r\n\r\nconst NavMcDron = ({  }) => {\r\n    return (\r\n    <Navbar className=\"bg-bluemcdron\">\r\n        <ArrowLeftShort \r\n            width=\"50\" \r\n            height=\"50\"\r\n            onClick={ () => history.goBack() }\r\n            color=\"white\"\r\n        />\r\n    </Navbar>\r\n    )\r\n};\r\n\r\nexport default connect( null, { logout } )( NavMcDron );","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Inicio from \"../components/Inicio.component\";\r\nimport ListaReparaciones from \"../components/ListaReparaciones.component\";\r\nimport Reparacion from \"../components/Reparacion.component\";\r\n\r\nimport NavMcDron from \"../components/NavMcDron.component\";\r\n\r\n\r\nconst InicioRoutes = ({ match, isLoggedIn, admin }) => {\r\n\r\n    console.log(\"inicio rutes\")\r\n    console.log(isLoggedIn);\r\n\r\n    return (\r\n        <>\r\n        { isLoggedIn ?\r\n        // true ? \r\n        <>\r\n            <NavMcDron />\r\n\r\n            <Switch>\r\n\r\n                <Route exact path = {`${match.path}`} component= {Inicio} />\r\n\r\n                <Route exact path={`${match.path}/reparaciones`} component={ListaReparaciones} />\r\n\r\n                <Route exact path={`${match.path}/reparacion`} component={Reparacion} />\r\n\r\n            </Switch> \r\n        </> \r\n        : \r\n             <Redirect to=\"/login\" />\r\n            \r\n        }\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default InicioRoutes;","// Modules\r\nimport React from 'react';\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Componenst\r\nimport Login from '../components/Login.component';\r\nimport Error from \"../components/Error.component\";\r\n\r\n// import Turno from \"../components/Turno.components\";\r\n// import Resumen from \"../components/Resumen.component\";\r\n\r\n//Routes\r\nimport InicioRoutes from \"./Inicio.routes\";\r\n// import TiposJornadaRoutes from \"./TiposJornada/TiposJornada.routes\";\r\n\r\n// Actions\r\nimport { login, logout } from \"../redux/root-actions\";\r\n\r\nconst Routes = ({ isLoggedIn, admin }) => {\r\n    return (<>\r\n        <Switch>\r\n            <Route exact path=\"/\" render={() => <Redirect to=\"/inicio\" />}/>\r\n\r\n            <Route path=\"/noautorizado\" render = { () => <Error mensaje={\"Acceso no autorizado\"} /> } />\r\n            <Route path=\"/errorlogin\" render = { () => <Error mensaje={\"Login incorrecto\"} /> } />\r\n            <Route path=\"/ocurrioproblema\" render = { () => <Error mensaje={\"Ocurrió un problema\"} /> } />\r\n\r\n            <Route path=\"/login\" render = {props => <Login {...props} /> }/>\r\n\r\n            <Route path=\"/inicio\" render = {props => <InicioRoutes {...props} isLoggedIn = { isLoggedIn } admin = { admin } /> }/>\r\n\r\n        </Switch>\r\n    </>)\r\n};\r\n\r\nexport default connect( null, { login, logout } )( Routes );","import React from \"react\";\r\nimport {Router} from \"react-router-dom\";\r\nimport history from \"../history\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Routes from \"../routes/Routes\";\r\nimport ErrorComponent from \"./Error.component\";\r\n\r\n// import '../../node_modules/bootstrap-icons/icons';\r\n\r\n\r\nconst App = ( { isLoggedIn, admin, modalError }) => {\r\n\r\n\r\n  return (\r\n    <div>\r\n        <ErrorComponent \r\n          hide = {modalError.showError} \r\n          mensaje = {modalError.mensajeError} \r\n          titulo = {modalError.tituloError}\r\n        />\r\n        <Router history = {history} >\r\n          <Routes isLoggedIn = {isLoggedIn} admin = {admin}/>\r\n        </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ( state ) => ({\r\n  isLoggedIn: state.app.isLoggedIn,\r\n  admin: state.app.usuario.admin,\r\n  modalError: state.app.modalError,\r\n});\r\n\r\nexport default connect( mapStateToProps )( App );\r\n","import { AppTypes } from \"./App.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    isLoggedIn: false,\r\n    isFetching: false,\r\n    modalError: {\r\n        showError: false,\r\n        mensajeError: '',\r\n        tituloError: ''\r\n    },\r\n    usuario:{\r\n        nombre: '',\r\n        apellido: '',\r\n        email: '',\r\n        nick: '',\r\n        urlFoto: '',\r\n        password: '',\r\n        admin: false\r\n        //token: ''\r\n    },\r\n    // reparacion:{\r\n    //     drone: '',\r\n    //     nroSerieDrone: '',\r\n    //     descripcionTec: '',\r\n    //     descripcionUsu: '',\r\n    //     presupuestoMO: '',\r\n    //     presupuestoRepuestos: '',\r\n    //     presupuestoFinal: '',\r\n    //     presupuestoDiagnostico: '',\r\n    //     estado: '',\r\n    //     fechaConsulta: '',\r\n    //     fechaRecepcion: '',\r\n    //     fechaEntrega: '',\r\n    //     fechaFinalizacion: '',\r\n    //     prioridad: '',\r\n    //     repuestos: '',\r\n    //     entrega: '',\r\n    //     seguimientoEntrega: '',\r\n    //     drive: '',\r\n    //     informe: ''\r\n    // },\r\n    coleccionReparaciones: []\r\n}\r\n\r\n// Reducer para el App\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case AppTypes.GET_REPARACIONES:\r\n            return { \r\n                ...state, \r\n                coleccionReparaciones: action.payload.data\r\n            };\r\n\r\n        case AppTypes.CHANGE_INPUT_REP:\r\n            return { \r\n                ...state, \r\n                reparacion: {\r\n                    ...state.reparacion,\r\n                    [action.payload.input]: action.payload.data\r\n                }\r\n             };\r\n\r\n        case AppTypes.ISFETCHING_START:\r\n            return { ...state, isFetching: true };\r\n\r\n        case AppTypes.ISFETCHING_COMPLETE:\r\n            return { ...state, isFetching: false };\r\n\r\n        case AppTypes.LOGIN:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                isLoggedIn: action.payload.data.isLoggedIn,\r\n                usuario: {\r\n                    ...state.usuario,\r\n                    nombre: action.payload.data.usuario?.nombre,\r\n                    apellido: action.payload.data.usuario?.apellido,\r\n                    admin: action.payload.data.usuario?.admin,\r\n                    email: action.payload.data.usuario?.email,\r\n                    nick: action.payload.data.usuario?.nick,\r\n                    password: action.payload.data.usuario?.password,\r\n                    urlFoto: action.payload.data.usuario?.urlFoto\r\n                    //token: action.payload.data.usuario.token\r\n                }\r\n            }\r\n        case AppTypes.LOGOUT:\r\n            return {\r\n                ...state, \r\n                isLoggedIn: action.payload.data.isLoggedIn\r\n            }\r\n        case AppTypes.CHANGE_PASSWORD_LOGIN:\r\n            return { \r\n                ...state, \r\n                usuario: {\r\n                    ...state.usuario,\r\n                    password: action.payload.data\r\n                }\r\n            };\r\n        case AppTypes.CHANGE_EMAIL_LOGIN:\r\n            return { \r\n                ...state, \r\n                usuario: {\r\n                    ...state.usuario,\r\n                    email: action.payload.data\r\n                }\r\n            };\r\n        case AppTypes.MODAL_ERROR:\r\n            console.log(\"llega al reducer \" + action.payload.data.showError);\r\n            return { \r\n                ...state,\r\n                modalError: action.payload.data.modalError\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport AppReducer from \"./App/App.reducer\";\r\n\r\n// Aquí se centralizan los reducers. Cuando se importan los reducers desde otros archivos, se hace desde éste.\r\nexport default combineReducers({ \r\n    app: AppReducer\r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport ThunkMiddleware from \"redux-thunk\";\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst composeEnhancers =\r\n    window.window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middlewares = [ThunkMiddleware];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n);\r\n\r\nexport default store;","import ReactDOM from \"react-dom\";\r\nimport App from \"./components/App.component.jsx\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap.min.js'\r\nimport './css/estilos.css';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}